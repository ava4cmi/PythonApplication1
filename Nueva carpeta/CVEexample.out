0 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 113::Application accepts CRLF in an object ID, allowing  HTTP response splitting.::HTTP response splitting via CRLF in parameter  related to URL.::HTTP response splitting via CRLF in parameter  related to URL.::Bulletin board allows response splitting via CRLF  in parameter.::Bulletin board allows response splitting via CRLF  in parameter.::Response splitting via CRLF in  PHPSESSID.::Chain: Application accepts CRLF in an object ID,  allowing HTTP response splitting.::Chain: HTTP response splitting via CRLF in  parameter related to URL.
13 
14 115::Product sees dangerous file extension in free text  of a group discussion, disconnects all users.::Product does not correctly import and process  security settings from another product.
15 116::OS command injection in backup software using  shell metacharacters in a filename; correct behavior would require that this  filename could not be changed.::Web application does not set the charset when  sending a page to a browser, allowing for XSS exploitation when a browser  chooses an unexpected encoding.::Program does not set the charset when sending a  page to a browser, allowing for XSS exploitation when a browser chooses an  unexpected encoding.::SQL injection via password parameter; a strong  password might contain '&'::Cross-site scripting in chat application via a  message subject, which normally might contain '&' and other XSS-related  characters.::Cross-site scripting in chat application via a  message, which normally might be allowed to contain arbitrary  content.
16 117::Chain: inject fake log entries with fake  timestamps using CRLF injection
17 
18 119::Classic stack-based buffer overflow in media  player using a long entry in a playlist::Heap-based buffer overflow in media player using a  long entry in a playlist::large precision value in a format string triggers  overflow::negative offset value leads to out-of-bounds  read::malformed inputs cause accesses of uninitialized  or previously-deleted objects, leading to memory  corruption::chain: lack of synchronization leads to memory  corruption::attacker-controlled array index leads to code  execution::chain: -1 value from a function call was intended  to indicate an error, but is used as an array index  instead.::chain: incorrect calculations lead to incorrect  pointer dereference and memory corruption::product accepts crafted messages that lead to a  dereference of an arbitrary pointer::chain: malformed input causes dereference of  uninitialized memory::OS kernel trusts userland-supplied length value,  allowing reading of sensitive information
19 
20 120::buffer overflow using command with long  argument::buffer overflow in local program using long  environment variable::buffer overflow in comment characters, when  product increments a counter for a '>' but does not decrement for  '<'::By replacing a valid cookie value with an  extremely long string of characters, an attacker may overflow the  application's buffers.::By replacing a valid cookie value with an  extremely long string of characters, an attacker may overflow the  application's buffers.
21 
22 122::Chain: integer signedness passes signed  comparison, leads to heap overflow
23 
24 124::Unchecked length of SSLv2 challenge value leads to  buffer underflow.::Buffer underflow from a small size value with a  large buffer (length parameter inconsistency,  CWE-130)::Buffer underflow from an all-whitespace string,  which causes a counter to be decremented before the buffer while looking for  a non-whitespace character.::Buffer underflow resultant from encoded data that  triggers an integer overflow.::Product sets an incorrect buffer size limit,  leading to 'off-by-two' buffer underflow.::Negative value is used in a memcpy() operation,  leading to buffer underflow.::Buffer underflow due to mishandled special  characters
25 125::out-of-bounds read due to improper length  check::packet with large number of specified elements  cause out-of-bounds read.::packet with large number of specified elements  cause out-of-bounds read.::out-of-bounds read, resultant from integer  underflow::large length value causes out-of-bounds  read::malformed image causes out-of-bounds  read
26 
27 
28 
29 129::large ID in packet used as array  index::negative array index as argument to POP LIST  command::Integer signedness error leads to negative array  index::product does not properly track a count and a  maximum number, which can lead to resultant array index  overflow.::Chain: device driver for packet-capturing software  allows access to an unintended IOCTL with resultant array index  error.::Chain: array index error (CWE-129) leads to  deadlock (CWE-833)
30 
31 130::Web application firewall consumes excessive memory  when an HTTP request contains a large Content-Length value but no POST  data.::can overlap zero-length  issues::leads to memory consumption, integer overflow, and  heap overflow::is effectively an accidental double increment of a  counter that prevents a length check conditional from exiting a  loop.::length field of a request not  verified::buffer overflow by modifying a length  value::length field inconsistency crashes cell  phone
32 131::substitution overflow: buffer overflow using  environment variables that are expanded after the length check is  performed::substitution overflow: buffer overflow using  expansion of environment variables::substitution overflow: buffer overflow using a  large number of substitution strings::transformation overflow: product adds extra escape  characters to incoming data, but does not account for them in the buffer  length::transformation overflow: buffer overflow when  expanding '>' to '&gt;', etc.::expansion overflow: buffer overflow using  wildcards::expansion overflow: long pathname + glob =  overflow::expansion overflow: long pathname + glob =  overflow::special characters in argument are not properly  expanded::small length value leads to heap  overflow::multiple variants::needs closer investigation, but probably  expansion-based::needs closer investigation, but probably  expansion-based::Chain: Language interpreter calculates wrong  buffer size (CWE-131) by using 'size = ptr ? X : Y' instead of 'size = (ptr  ? X : Y)' expression.
33 134::format string in Perl  program::format string in bad call to syslog  function::format string in bad call to syslog  function::format strings in NNTP server  responses::Chain: untrusted search path enabling resultant  format string by loading malicious internationalization  messages
34 
35 138::Read arbitrary files from mail client by providing  a special MIME header that is internally used to store pathnames for  attachments.::Setuid program does not cleanse special escape  sequence before sending data to a mail program, causing the mail program to  process those sequences.::Multi-channel issue. Terminal escape sequences not  filtered from log files.::Multi-channel issue. Terminal escape sequences not  filtered from log files.
36 
37 
38 141::Attacker inserts field separator into input to  specify admin privileges.
39 142::Multiple internal space, insufficient quoting -  program does not use proper delimiter between  values.
40 143::Carriage returns in subject field allow adding new  records to data file.::Attacker inserts carriage returns and '|' field  separator characters to add new  user/privileges.
41 144::Linebreak in field of PHP script allows admin  privileges when written to data file.
42 
43 
44 147::MFV. mail server does not properly identify  terminator string to signify end of message, causing corruption, possibly in  conjunction with off-by-one error.::MFV. mail server does not properly identify  terminator string to signify end of message, causing corruption, possibly in  conjunction with off-by-one error.::Mail server does not quote end-of-input terminator  if it appears in the middle of a message.::Improperly terminated comment or phrase allows  commands.
45 
46 149::MIE. MFV too? bypass AV/security with fields that  should not be quoted, duplicate quotes, missing leading/trailing  quotes.
47 
48 150::The mail program processes special '~' escape  sequence even when not in interactive mode.::Setuid program does not filter escape sequences  before calling mail program.::Mail function does not filter control characters  from arguments, allowing mail message content to be  modified.::Multi-channel issue. Terminal escape sequences not  filtered from log files.::Multi-channel issue. Terminal escape sequences not  filtered from log files.::Terminal escape sequences not filtered by  terminals when displaying files.::Terminal escape sequences not filtered by  terminals when displaying files.::Terminal escape sequences not filtered by  terminals when displaying files.::Terminal escape sequences not filtered by  terminals when displaying files.::Terminal escape sequences not filtered by  terminals when displaying files.::MFV. (multi-channel). Injection of control  characters into log files that allow information hiding when using raw Unix  programs to read the files.
49 151::Mail client command execution due to improperly  terminated comment in address list.::MIE. RFC822 comment fields may be processed as  other fields by clients.::Well-placed comment bypasses security  warning.::Information hiding using a manipulation involving  injection of comment code into product. Note: these vulnerabilities are  likely vulnerable to more general XSS problems, although a regexp might  allow '>!--' while denying most other  tags.::Information hiding using a manipulation involving  injection of comment code into product. Note: these vulnerabilities are  likely vulnerable to more general XSS problems, although a regexp might  allow '<!--' while denying most other  tags.
50 152::Server trusts client to expand macros, allows  macro characters to be expanded to trigger resultant information  exposure.::Attacker can obtain sensitive information from a  database by using a comment containing a macro, which inserts the data  during expansion.
51 153::Server trusts client to expand macros, allows  macro characters to be expanded to trigger resultant information  exposure.
52 154::'%' variable is expanded by wildcard function into  disallowed commands.::Server trusts client to expand macros, allows  macro characters to be expanded to trigger resultant information  exposure.
53 155::Bypass file restrictions using wildcard  character.::Bypass file restrictions using wildcard  character.::Wildcards generate long string on  expansion.::SQL injection involving '/**/'  sequences.
54 156::MIE. virus protection bypass with RFC violations  involving extra whitespace, or missing  whitespace.::CPU consumption with MIME headers containing lines  with many space characters, probably due to algorithmic complexity  (RESOURCE.AMP.ALG).::MIE. whitespace interpreted differently by mail  clients.
55 157::Crash via missing paired delimiter (open  double-quote but no closing double-quote).::Crash via message without closing  '>'.::Buffer overflow via mailbox name with an opening  double quote but missing a closing double quote, causing a larger copy than  expected.
56 158::Source code disclosure using trailing  null.::Source code disclosure using trailing  null.::Trailing null allows file  include.::Null character in MIME header allows detection  bypass.::web server allows source code for executable  programs to be read via a null character (%00) at the end of a  request.::Protection mechanism for limiting file access can  be bypassed using a null character (%00) at the end of the directory  name.::XSS protection mechanism only checks for sequences  with an alphabetical character following a (<), so a non-alphabetical or  null character (%00) following a < may be processed. ::Decoding function in proxy allows regular  expression bypass in ACLs via URLs with null  characters.::Null byte bypasses PHP regexp check (interaction  error).::Null byte bypasses PHP regexp check (interaction  error).
57 
58 
59 
60 
61 
62 
63 
64 166::Crash via message type without separator  character::Missing special character (separator) causes  crash::HTTP GET without \r\n\r\n CRLF sequences causes  product to wait indefinitely and prevents other users from accessing  it
65 167::Extra '<' in front of SCRIPT  tag.::Extra '<' in front of SCRIPT  tag.::'<script' - probably a cleansing  error
66 
67 170::Attacker does not null-terminate argv[] when  invoking another program.::Interrupted step causes resultant lack of null  termination.::Fault causes resultant lack of null termination,  leading to buffer expansion.::Multiple vulnerabilities related to improper null  termination.::Product does not null terminate a message buffer  after snprintf-like call, leading to  overflow.
68 
69 
70 174::XSS protection mechanism attempts to remove '/'  that could be used to close tags, but it can be bypassed using double  encoded slashes (%252F)::Directory traversal using double  encoding.::'%2527' (double-encoded single quote) used in SQL  injection.::Double hex-encoded  data.::Browser executes HTML at higher privileges via URL  with hostnames that are double hex encoded, which are decoded twice to  generate a malicious hostname.
71 
72 176::Overlaps interaction  error.
73 177::Hex-encoded path traversal variants - '%2e%2e',  '%2e%2e%2f', '%5c%2e%2e'::Hex-encoded path traversal variants - '%2e%2e',  '%2e%2e%2f', '%5c%2e%2e'::Hex-encoded path traversal variants - '%2e%2e',  '%2e%2e%2f', '%5c%2e%2e'::'%20' (encoded  space)::'%20' (encoded  space)::'%20' (encoded  space)::'%20' (encoded  space)::Crash via hex-encoded space  '%20'.::'%00' (encoded  null)::'%00' (encoded  null)::'%00' (encoded  null)::'%00' (encoded  null)::'%00' (encoded  null)::'%00' (encoded  null)::'%00' (encoded  null)::'%2f' (encoded  slash)::'%5c' (encoded backslash) and '%2e' (encoded dot)  sequences::'%5c' (encoded  backslash)::'%0a' (overlaps  CRLF)
74 178::Application server allows attackers to bypass  execution of a jsp page and read the source code using an upper case JSP  extension in the request.::The server is case sensitive, so filetype handlers  treat .jsp and .JSP as different extensions. JSP source code may be read  because .JSP defaults to the filetype 'text'. ::The server is case sensitive, so filetype handlers  treat .jsp and .JSP as different extensions. JSP source code may be read  because .JSP defaults to the filetype 'text'. ::A URL that contains some characters whose case is  not matched by the server's filters may bypass access restrictions because  the case-insensitive file system will then handle the request after it  bypasses the case sensitive filter.::chain: Code was ported from a case-sensitive Unix  platform to a case-insensitive Windows platform where filetype handlers  treat .jsp and .JSP as different extensions. JSP source code may be read  because .JSP defaults to the filetype 'text'. ::Leads to interpretation  error::Directories may be listed because lower case web  requests are not properly handled by the server. ::Case insensitive passwords lead to search space  reduction.::HTTP server allows bypass of access restrictions  using URIs with mixed case.::Mixed upper/lowercase allows bypass of  ACLs.::Bypass malicious script detection by using tokens  that aren't case sensitive.::Mixed case problem allows 'admin' to have 'Admin'  rights (alternate name property).::Chain: uppercase file extensions causes web server  to return script source code instead of executing the  script.
75 
76 180::Overlaps  'fakechild/../realchild'::Product checks URI for '<' and other literal  characters, but does it before hex decoding the URI, so '%3E' and other  sequences are allowed.
77 
78 182::'/.////' in pathname collapses to absolute  path.::'/.//..//////././' is collapsed into '/.././'  after '..' and '//' sequences are removed.::'.../...//' collapsed to '...' due to removal of  './' in web server.::chain: HTTP server protects against '..' but  allows '.' variants such as '////./../.../'. If the server removes '/..'  sequences, the result would collapse into an unsafe value '////../'  (CWE-182).::MFV. Regular expression intended to protect  against directory traversal reduces '.../...//' to  '../'.::XSS protection mechanism strips a <script>  sequence that is nested in another <script>  sequence.
79 
80 184::PHP remote file inclusion in web application that  filters 'http' and 'https' URLs, but not  'ftp'.::Programming language does not filter certain shell  metacharacters in Windows environment.::XSS filter doesn't filter null characters before  looking for dangerous tags, which are ignored by web browsers. MIE and  validate-before-cleanse.::Web-based mail product doesn't restrict dangerous  extensions such as ASPX on a web server, even though others are  prohibited.::Resultant XSS from incomplete blacklist (only  <script> and <style> are  checked).::Privileged program does not clear sensitive  environment variables that are used by bash. Overlaps multiple  interpretation error.::SQL injection protection scheme does not quote the  '\' special character.::Incomplete blacklist prevents user from  automatically executing .EXE files, but allows .LNK, allowing resultant  Windows symbolic link.::product doesn't protect one dangerous variable  against external modification::Chain: only removes SCRIPT tags, enabling  XSS::Chain: only checks 'javascript:'  tag::Chain: incomplete blacklist for OS command  injection::'\' not in blacklist for web server, allowing path  traversal attacks when the server is run in Windows and other OSes. 
81 185::Regexp isn't 'anchored' to the beginning or end,  which allows spoofed values that have trusted values as  substrings.::Regexp for IP address isn't anchored at the end,  allowing appending of shell metacharacters.::Bypass access restrictions via multiple leading  slash, which causes a regular expression to  fail.::Local user DoS via invalid regular  expressions.::chain: Malformed input generates a regular  expression error that leads to information  exposure.::Certain strings are later used in a regexp,  leading to a resultant crash.::MFV. Regular expression intended to protect  against directory traversal reduces '.../...//' to  '../'.::Malformed regexp syntax leads to information  exposure in error message.::Code injection due to improper quoting of regular  expression.::Null byte bypasses PHP regexp  check.::Null byte bypasses PHP regexp  check.
82 186::MIE. '.php.ns' bypasses '.php$' regexp but is  still parsed as PHP by Apache. (manipulates an equivalence property under  Apache)
83 187::Argument parser of an IMAP server treats a partial  command 'body[p' as if it is 'body.peek', leading to index error and  out-of-bounds corruption.::Web browser only checks the hostname portion of a  certificate when the hostname portion of the URI is not a fully qualified  domain name (FQDN), which allows remote attackers to spoof trusted  certificates.::One-character password by attacker checks only  against first character of real password.::One-character password by attacker checks only  against first character of real password.
84 
85 190:: chain: integer overflow leads to  use-after-free::Integer overflow via a large number of  arguments.::Integer overflow in OpenSSH as listed in the  demonstrative examples.::Image with large width and height leads to integer  overflow.::Length value of -1 leads to allocation of 0 bytes  and resultant heap overflow.::Length value of -1 leads to allocation of 0 bytes  and resultant heap overflow.
86 191::Integer underflow in firewall via malformed  packet.::Integer underflow by packet with invalid  length.::Long input causes incorrect length  calculation.::Malformed icon causes integer underflow in loop  counter variable.
87 193::This is an interesting example that might not be  an off-by-one.::An off-by-one enables a terminating null to be  overwritten, which causes 2 strings to be merged and enable a format  string.::Off-by-one error allows source code disclosure of  files with 4 letter extensions that match an accepted 3-letter  extension.::Off-by-one buffer  overflow.::Off-by-one error causes an snprintf call to  overwrite a critical internal variable with a null  value.::Off-by-one error in function used in many products  leads to a buffer overflow during pathname management, as demonstrated using  multiple commands in an FTP server.::Off-by-one error allows read of sensitive memory  via a malformed request.::Chain: security monitoring product has an  off-by-one error that leads to unexpected length values, triggering an  assertion.
88 194::Sign extension error produces -1 value that is  treated as a command separator, enabling OS command injection. ::Product uses 'char' type for input character. When  char is implemented as a signed type, ASCII value 0xFF (255), a sign  extension produces a -1 value that is treated as a program-specific  separator value, effectively disabling a length check and leading to a  buffer overflow. This is also a multiple interpretation  error.::chain: signed short width value in image processor  is sign extended during conversion to unsigned int, which leads to integer  overflow and heap-based buffer overflow.::chain: signedness error allows bypass of a length  check; later sign extension makes exploitation  easier.::Sign extension when manipulating Pascal-style  strings leads to integer overflow and improper memory  copy.
89 195::Chain: integer signedness passes signed  comparison, leads to heap overflow
90 
91 197::Integer truncation of length value leads to  heap-based buffer overflow.::Size of a particular type changes for 64-bit  platforms, leading to an integer truncation in document processor causes  incorrect index to be generated.
92 
93 20::Eval injection in Perl program using an ID that  should only contain hyphens and numbers.::SQL injection through an ID that was supposed to  be numeric.::lack of input validation in spreadsheet program  leads to buffer overflows, integer overflows, array index errors, and memory  corruption.::insufficient validation enables  XSS::driver in security product allows code execution  due to insufficient validation::infinite loop from DNS packet with a label that  points to itself::infinite loop from DNS packet with a label that  points to itself::missing parameter leads to  crash::HTTP request with missing protocol version number  leads to crash::request with missing parameters leads to  information exposure::system crash with offset value that is  inconsistent with packet size::size field that is inconsistent with packet size  leads to buffer over-read::product uses a blacklist to identify potentially  dangerous content, allowing attacker to bypass a  warning::security bypass via an extra  header::use of extra data in a signature allows  certificate signature forging::empty packet triggers  reboot::incomplete blacklist allows SQL  injection::NUL byte in theme name cause directory traversal  impact to be worse::kernel does not validate an incoming pointer  before dereferencing it::anti-virus product has insufficient input  validation of hooked SSDT functions, allowing code  execution::anti-virus product allows DoS via zero-length  field::driver does not validate input from userland to  the kernel::kernel does not validate parameters sent in from  userland, allowing code execution::lack of validation of string length fields allows  memory consumption or buffer over-read::lack of validation of length field leads to  infinite loop::lack of validation of input to an IOCTL allows  code execution::zero-length attachment causes  crash::zero-length input causes free of uninitialized  pointer::crash via a malformed frame  structure::infinite loop from a long SMTP  request::router crashes with a malformed  packet::packet with invalid version number leads to NULL  pointer dereference::crash via multiple '.' characters in file  extension
94 
95 
96 
97 
98 204::This, and others, use '..' attacks and monitor  error responses, so there is overlap with directory  traversal.::Enumeration of valid usernames based on  inconsistent responses::Account number enumeration via inconsistent  responses.::User enumeration via discrepancies in error  messages.::User enumeration via discrepancies in error  messages.
99 
100 206::File existence via infoleak monitoring whether  'onerror' handler fires or not.::Valid groupname enumeration via behavioral  infoleak (sends response if valid, doesn't respond if  not).::Behavioral infoleak in GUI allows attackers to  distinguish between alphanumeric and non-alphanumeric characters in a  password, thus reducing the search space.::Product immediately sends an error message when  user does not exist instead of waiting until the password is provided,  allowing username enumeration.
101 207::Product modifies TCP/IP stack and ICMP error  messages in unusual ways that show the product is in  use.::Behavioral infoleak by responding to SYN-FIN  packets.::Honeypot generates an error with a 'pwd' command  in a particular directory, allowing attacker to know they are in a honeypot  system.
102 
103 209::POP3 server reveals a password in an error message  after multiple APOP commands are sent. Might be resultant from another  weakness.::Program reveals password in error message if  attacker can trigger certain database errors.::Composite: application running with high  privileges allows user to specify a restricted file to process, which  generates a parsing error that leaks the contents of the  file.::Existence of user names can be determined by  requesting a nonexistent blog and reading the error  message.::Direct request to library file in web application  triggers pathname leak in error message.::Malformed input to login page causes leak of full  path when IMAP call fails.::Malformed regexp syntax leads to information  exposure in error message.
104 210::Infoleak of sensitive information in error message  (physical access required).
105 211::chain: product does not protect against direct  request of an include file, leading to resultant path disclosure when the  include file does not successfully execute.::Single ''' inserted into SQL query leads to  invalid SQL query execution, triggering full path disclosure. Possibly  resultant from more general SQL injection  issue.::chain: product does not protect against direct  request of a library file, leading to resultant path disclosure when the  file does not successfully execute.::invalid parameter triggers a failure to find an  include file, leading to infoleak in error  message.::Various invalid requests lead to information leak  in verbose error messages describing the failure to instantiate a class,  open a configuration file, or execute an undefined  function.::Improper handling of filename request with  trailing '/' causes multiple consequences, including information leak in  Visual Basic error message.
106 212::Some image editors modify a JPEG image, but the  original EXIF thumbnail image is left intact within the JPEG. (Also an  interaction error).::NAT feature in firewall leaks internal IP  addresses in ICMP error messages.
107 213::Script calls  phpinfo()::Script calls  phpinfo()::Script calls  phpinfo()::Script calls  phpinfo()::Script calls  phpinfo()::Product lists DLLs and full  pathnames.::Telnet protocol allows servers to obtain sensitive  environment information from clients.::Telnet protocol allows servers to obtain sensitive  environment information from clients.
108 214::password passed on command  line::password passed on command  line::username/password on command line allows local  users to view via 'ps' or other process listing  programs::Username/password on command line allows local  users to view via 'ps' or other process listing  programs.::PGP passphrase provided as command line  argument.::Kernel race condition allows reading of  environment variables of a process that is still  spawning.
109 215::Password exposed in debug  information.::CGI script includes sensitive information in debug  messages when an error is triggered.::FTP client with debug option enabled shows  password to the screen.
110 
111 219::Data file under web  root.::Data file under web  root.::Username/password in data file under web  root.::Database file under web  root.::database file under web  root.
112 22::Newsletter module allows reading arbitrary files  using '../' sequences.::FTP server allows deletion of arbitrary files  using '..' in the DELE command.::FTP server allows creation of arbitrary  directories using '..' in the MKD command.::OBEX FTP service for a Bluetooth device allows  listing of directories, and creation or reading of files using '..'  sequences..::Software package maintenance program allows  overwriting arbitrary files using '../'  sequences.::Bulletin board allows attackers to determine the  existence of files using the avatar.::PHP program allows arbitrary code execution using  '..' in filenames that are fed to the include()  function.::Overwrite of files using a .. in a Torrent  file.::Chat program allows overwriting files using a  custom smiley request.::Chain: external control of values for user's  desired language and theme enables path  traversal.
113 
114 
115 222::Web browser truncates long sub-domains or paths,  facilitating phishing.::Bypass URL filter via a long URL with a large  number of trailing hex-encoded space  characters.::Does not log complete URI of a long request  (truncation).
116 223::Login attempts not recorded if user disconnects  before maximum number of tries.::Sender's IP address not recorded in outgoing  e-mail.::Failed authentication attempt not recorded if  later attempt succeeds.
117 224::Attacker performs malicious actions on a hard link  to a file, obscuring the real target file.
118 226::Ethernet NIC drivers do not pad frames with null  bytes, leading to infoleak from malformed  packets.::router does not clear information from DHCP  packets that have been previously used::Products do not fully clear memory buffers when  less data is stored into the buffer than  previous.::Products do not fully clear memory buffers when  less data is stored into the buffer than  previous.::Products do not fully clear memory buffers when  less data is stored into the buffer than  previous.::Product does not clear a data structure before  writing to part of it, yielding information leak of previously used  memory.::Memory not properly cleared before  reuse.
119 227::crypto implementation removes padding when they  shouldn't, allowing forged signatures::crypto implementation removes padding when they  shouldn't, allowing forged signatures
120 
121 
122 
123 230::Blank Host header triggers resultant  infoleak.::Blank 'charset' attribute in MIME header triggers  crash.::Blank parameter causes external error  infoleak.::Blank parameter causes external error  infoleak.
124 
125 232::Client crash when server returns unknown driver  type.
126 
127 234::Web server allows disclosure of CGI source code  via an HTTP request without the version  number.::CGI crashes when called without any  arguments.::CGI crashes when called without any  arguments.::Crash in HTTP request without a Content-Length  field.::Crash in HTTP request without a Content-Length  field.::Empty elements/strings in protocol test suite  affect many SSH2 servers/clients.::FTP server crashes in PORT command without an  argument.::Resultant infoleak in web server via GET requests  without HTTP/1.0 version string.::GET request with empty parameter leads to error  message infoleak (path disclosure).
128 235::MIE. multiple gateway/security products allow  restriction bypass using multiple MIME fields with the same name, which are  interpreted differently by clients.
129 236::Crash in IRC client via PART message from a  channel the user is not in.::Router crash or bad route modification using BGP  updates with invalid transitive attribute.
130 
131 
132 239::HTTP GET without \r\n\r\n CRLF sequences causes  product to wait indefinitely and prevents other users from accessing  it.::Partial request is not timed  out.::MFV. CPU exhaustion in printer via partial  printing request then early termination of  connection.::CPU consumption by sending incomplete HTTP  requests and leaving the connections open.
133 
134 
135 241::FTP server crash via PORT command with non-numeric  character.::Anti-virus product has assert error when line  length is non-numeric.
136 
137 
138 
139 
140 
141 
142 
143 
144 250::FTP client program on a certain OS runs with  setuid privileges and has a buffer overflow. Most clients do not need extra  privileges, so an overflow is not a vulnerability for those clients. ::Program runs with privileges and calls another  program with the same privileges, which allows read of arbitrary files. ::OS incorrectly installs a program with setuid  privileges, allowing users to gain privileges. ::Composite: application running with high  privileges allows user to specify a restricted file to process, which  generates a parsing error that leaks the contents of the file. ::Program does not drop privileges before calling  another program, allowing code execution.::setuid root program allows creation of arbitrary  files through command line argument.::Installation script installs some programs as  setuid when they shouldn't be.
145 252::Unchecked return value leads to resultant integer  overflow and code execution.::Program does not check return value when invoking  functions to drop privileges, which could leave users with higher privileges  than expected by forcing those functions to  fail.::Program does not check return value when invoking  functions to drop privileges, which could leave users with higher privileges  than expected by forcing those functions to  fail.::chain: unchecked return value can lead to NULL  dereference::chain: unchecked return value (CWE-252) leads to  free of invalid, uninitialized pointer  (CWE-824).
146 
147 
148 
149 
150 
151 
152 
153 
154 
155 
156 266::untrusted user placed in unix 'wheel'  group::Product allows users to grant themselves certain  rights that can be used to escalate  privileges.::Product uses group ID of a user instead of the  group, causing it to run with different privileges. This is resultant from  some other unknown issue.::Product mistakenly assigns a particular status to  an entity, leading to increased privileges.
157 267::Roles have access to dangerous procedures  (Accessible entities).::Untrusted object/method gets access to clipboard  (Accessible entities).::Gain privileges using functions/tags that should  be restricted (Accessible entities).::Traceroute program allows unprivileged users to  modify source address of packet (Accessible  entities).::Bypass domain restrictions using a particular file  that references unsafe URI schemes (Accessible  entities).::Script does not restrict access to an update  command, leading to resultant disk consumption and filled error logs  (Accessible entities).::'public' database user can use stored procedure to  modify data controlled by the database owner (Unsafe privileged  actions).::User with capability can prevent setuid program  from dropping privileges (Unsafe privileged  actions).::Allows attachment to and modification of  privileged processes (Unsafe privileged  actions).::User with privilege can edit raw underlying object  using unprotected method (Unsafe privileged  actions).::Inappropriate actions allowed by a particular  role(Unsafe privileged actions).::Untrusted entity allowed to access the system  clipboard (Unsafe privileged actions).::Extra Linux capability allows bypass of  system-specified restriction (Unsafe privileged  actions).::User with debugging rights can read entire process  (Unsafe privileged actions).::Non-root admins can add themselves or others to  the root admin group (Unsafe privileged  actions).::Users can change certain properties of objects to  perform otherwise unauthorized actions (Unsafe privileged  actions).::Certain debugging commands not restricted to just  the administrator, allowing registry modification and infoleak (Unsafe  privileged actions).
158 268::Chaining of user  rights.::Gain certain rights via privilege chaining in  alternate channel.::Application is allowed to assign extra permissions  to itself.::'operator' user can overwrite usernames and  passwords to gain admin privileges.
159 269::Terminal privileges are not reset when a user logs  out.::Does not properly pass security context to child  processes in certain cases, allows privilege  escalation.::Does not properly compute  roles.
160 
161 270::Web browser cross domain problem when user hits  'back' button.::Web browser cross domain problem when user hits  'back' button.::Cross-domain issue - third party product passes  code to web browser, which executes it in unsafe  zone.::Run callback in different security context after  it has been changed from untrusted to trusted. * note that 'context switch  before actions are completed' is one type of problem that happens  frequently, espec. in browsers.
162 271::Program does not drop privileges after acquiring  the raw socket.::Setuid program does not drop privileges after a  parsing error occurs, then calls another program to handle the  error.::Does not drop privileges in related groups when  lowering privileges.::Does not drop privileges in related groups when  lowering privileges.::Does not drop privileges before determining access  to certain files.::Finger daemon does not drop privileges when  executing programs on behalf of the user being  fingered.::FTP server does not drop privileges if a  connection is aborted during file transfer.::Program only uses seteuid to drop  privileges.::Windows program running as SYSTEM does not drop  privileges before executing other programs (many others like this,  especially involving the Help facility).::Setuid program does not drop privileges before  executing program specified in an environment  variable.::Setuid program does not drop privileges before  processing file specified on command line.::Service on Windows does not drop privileges before  using 'view file' option, allowing code  execution.
163 
164 
165 274::System limits are not properly enforced after  privileges are dropped.::Firewall crashes when it can't read a critical  memory block that was protected by a malicious  process.::Does not give admin sufficient privileges to  overcome otherwise legitimate user actions.
166 276::Executables installed  world-writable.::Home directories installed  world-readable.::World-writable log files allow information loss;  world-readable file has cleartext passwords.::World-readable  directory.::Windows product uses insecure permissions when  installing on Solaris (genesis: port error).::Insecure permissions for a shared secret key file.  Overlaps cryptographic problem.::Default permissions of a device allow IP  spoofing.
167 277::User's umask is used when creating temp  files.::Insecure umask for core dumps [is the umask  preserved or assigned?].
168 278::Does not obey specified permissions when  exporting.
169 279::Log files opened  read/write.::Log files opened  read/write.::Log files opened  read/write.
170 28::'\' not in blacklist for web server, allowing path  traversal attacks when the server is run in Windows and other OSes. ::Arbitrary files may be read files via ..\ (dot  dot) sequences in an HTTP request.
171 280::Special file system allows attackers to prevent  ownership/permission change of certain entries by opening the entries before  calling a setuid program.::FTP server places a user in the root directory  when the user's permissions prevent access to his/her own home  directory.
172 281::Automatic modification of permissions inherited  from another file system.::Permissions on backup file are created with  defaults, possibly less secure than original  file.::File is made world-readable when being  cloned.
173 282::Program runs setuid root but relies on a  configuration file owned by a non-root user.
174 283::Program does not verify the owner of a UNIX socket  that is used for sending a password.::Owner of special device not checked, allowing  root.
175 
176 285::Web application does not restrict access to admin  scripts, allowing authenticated users to reset administrative  passwords.::Web application does not restrict access to admin  scripts, allowing authenticated users to modify passwords of other  users.::Web application stores database file under the web  root with insufficient access control (CWE-219), allowing direct  request.::Terminal server does not check authorization for  guest access.::Database server does not use appropriate  privileges for certain sensitive operations.::Gateway uses default 'Allow' configuration for its  authorization settings.::Chain: product does not properly interpret a  configuration option for a system group, allowing users to gain  privileges.::Chain: SNMP product does not properly parse a  configuration option for which hosts are allowed to connect, allowing  unauthorized IP addresses to connect.::System monitoring software allows users to bypass  authorization by creating custom forms.::Chain: reliance on client-side security (CWE-602)  allows attackers to bypass authorization using a custom  client.::Chain: product does not properly handle wildcards  in an authorization policy list, allowing unintended  access.::Content management system does not check access  permissions for private files, allowing others to view those  files.::ACL-based protection mechanism treats negative  access rights as if they are positive, allowing bypass of intended  restrictions.::Product does not check the ACL of a page accessed  using an 'include' directive, allowing attackers to read unauthorized  files.::Default ACL list for a DNS server does not set  certain ACLs, allowing unauthorized DNS  queries.::Product relies on the X-Forwarded-For HTTP header  for authorization, allowing unintended access by spoofing the  header.::OS kernel does not check for a certain privilege  before setting ACLs for files.::Chain: file-system code performs an incorrect  comparison (CWE-697), preventing default ACLs from being properly  applied.::Chain: product does not properly check the result  of a reverse DNS lookup because of operator precedence (CWE-783), allowing  bypass of DNS-based access restrictions.
177 
178 287::login script for guestbook allows bypassing  authentication by setting a 'login_ok' parameter to  1.::admin script allows authentication bypass by  setting a cookie value to 'LOGGEDIN'.::VOIP product allows authentication bypass using  127.0.0.1 in the Host header.::product uses default 'Allow' action, instead of  default deny, leading to authentication  bypass.::chain: redirect without exit (CWE-698) leads to  resultant authentication bypass.::product does not restrict access to a listening  port for a critical service, allowing authentication to be  bypassed.::product does not properly implement a  security-related configuration setting, allowing authentication  bypass.::authentication routine returns 'nil' instead of  'false' in some situations, allowing authentication bypass using an invalid  username.::authentication update script does not properly  handle when admin does not select any authentication modules, allowing  authentication bypass.::use of LDAP authentication with anonymous binds  causes empty password to result in successful  authentication::product authentication succeeds if user-provided  MD5 hash matches the hash in its database; this can be subjected to replay  attacks.::chain: product generates predictable MD5 hashes  using a constant value combined with username, allowing authentication  bypass.
179 288::Attackers with physical access to the machine may  bypass the password prompt by pressing the ESC (Escape) key. ::Direct request of installation file allows  attacker to create administrator accounts.::Attackers may gain additional privileges by  directly requesting the web management URL.::non-web::Bypass authentication via direct request to named  pipe.::User can avoid lockouts by using an API instead of  the GUI to conduct brute force password  guessing.
180 289::Protection mechanism that restricts URL access can  be bypassed using URL encoding.::Bypass of authentication for files using '\'  (backslash) or '%5C' (encoded backslash).
181 29::Protection mechanism checks for '/..' but doesn't  account for Windows-specific '\..' allowing read of arbitrary files. 
182 
183 292::VOIP product allows authentication bypass using  127.0.0.1 in the Host header.
184 
185 294::product authentication succeeds if user-provided  MD5 hash matches the hash in its database; this can be subjected to replay  attacks.
186 
187 
188 
189 
190 30::Protection mechanism checks for '/..' but doesn't  account for Windows-specific '\..' allowing read of arbitrary files. 
191 
192 
193 302::DebPloit::Web auth::Authentication bypass by setting certain cookies  to 'true'.::Authentication bypass by setting certain cookies  to 'true'.::Admin access by setting a  cookie.::Gain privileges by setting  cookie.::Product trusts authentication information in  cookie.::Authentication bypass by setting admin-testing  variable to true.::Bypass auth and gain privileges by setting a  variable.
194 303::Conditional should have been an 'or' not an  'and'.
195 304::Shared secret not verified in a RADIUS response  packet, allowing authentication bypass by spoofing server  replies.
196 305::The provided password is only compared against the  first character of the real password.::The password is not properly checked, which allows  remote attackers to bypass access controls by sending a 1-byte password that  matches the first character of the real password. 
197 306::MFV. Access TFTP server without authentication and  obtain configuration file with sensitive plaintext  information.::Agent software running at privileges does not  authenticate incoming requests over an unprotected channel, allowing a  Shatter' attack.::Product enforces restrictions through a GUI but  not through privileged APIs.
198 307::Product does not disconnect or timeout after  multiple failed logins.::Product does not disconnect or timeout after  multiple failed logins.::Product does not disconnect or timeout after  multiple failed logins.::Product does not disconnect or timeout after  multiple failed logins.::Product does not disconnect or timeout after  multiple failed logins.::User accounts not disabled when they exceed a  threshold; possibly a resultant problem.
199 
200 
201 31::  
202 311::password and username stored in cleartext in a  cookie::password stored in cleartext in a file with  insecure permissions::chat program disables SSL in some circumstances  even when the user says to use SSL.::Chain: product uses an incorrect public exponent  when generating an RSA key, which effectively disables the  encryption::storage of unencrypted passwords in a  database::storage of unencrypted passwords in a  database::product stores a password in cleartext in  memory::storage of a secret key in cleartext in a  temporary file::SCADA product uses HTTP Basic Authentication,  which is not encrypted::login credentials stored unencrypted in a registry  key::Passwords transmitted in  cleartext.::Chain: Use of HTTPS cookie without 'secure' flag  causes it to be transmitted across unencrypted  HTTP.::Product sends password hash in cleartext in  violation of intended policy.::Remote management feature sends sensitive  information including passwords in cleartext.::Backup routine sends password in cleartext in  email.::Product transmits Blowfish encryption key in  cleartext.::Printer sends configuration information, including  administrative password, in cleartext.::Chain: cleartext transmission of the MD5 hash of  password enables attacks against a server that is susceptible to replay  (CWE-294).::Product sends passwords in cleartext to a log  server.::Product sends file with cleartext passwords in  e-mail message intended for diagnostic purposes. 
203 
204 313::Plaintext credentials in world-readable  file.::Password in cleartext in config  file.::Password in cleartext in config  file.::Decrypted copy of a message written to disk given  a combination of options and when user replies to an encrypted  message.::Plaintext storage of private key and passphrase in  log file when user imports the key.
205 314::Plaintext passwords in registry  key.
206 315::Admin password in plaintext in a  cookie.::Default configuration has cleartext  usernames/passwords in cookie.::Usernames/passwords in cleartext in  cookies.::Authentication information stored in cleartext in  a cookie.
207 316::Sensitive authentication information in cleartext  in memory.::Sensitive authentication information in cleartext  in memory.::Password protector leaves passwords in memory when  window is minimized, even when 'clear password when minimized' is  set.::SSH client does not clear credentials from  memory.
208 317::Unencrypted passwords stored in GUI dialog may  allow local users to access the passwords.
209 318::Product stores RSA private key in a DLL and uses  it to sign a certificate, allowing spoofing of servers and MITM  attacks.
210 319::Passwords transmitted in  cleartext.::Chain: Use of HTTPS cookie without 'secure' flag  causes it to be transmitted across unencrypted  HTTP.::Product sends password hash in cleartext in  violation of intended policy.::Remote management feature sends sensitive  information including passwords in cleartext.::Backup routine sends password in cleartext in  email.::Product transmits Blowfish encryption key in  cleartext.::Printer sends configuration information, including  administrative password, in cleartext.::Chain: cleartext transmission of the MD5 hash of  password enables attacks against a server that is susceptible to replay  (CWE-294).::Product sends passwords in cleartext to a log  server.::Product sends file with cleartext passwords in  e-mail message intended for diagnostic purposes. 
211 32::'\...' in web  server::'...' or '....' in chat  server::'...' in cd command in FTP  server::'...' in cd command in FTP  server::'...' in cd command in FTP  server::read of arbitrary files and directories using GET  or CD with '...' in Windows-based FTP server. ::read files using '.' and Unicode-encoded '/' or  '\' characters in the URL.::Directory listing of web server using  '...'::Triple dot
212 
213 
214 
215 
216 325::Missing challenge-response step allows  authentication bypass using public key.
217 326::Weak encryption::Weak encryption (chosen plaintext  attack)::Weak encryption::Weak encryption produces same ciphertext from the  same plaintext blocks.::Weak encryption::Weak encryption  scheme::Weak encryption  (XOR)::Weak encryption (reversible  algorithm).::Weak encryption (one-to-one  mapping).::Encryption error uses fixed salt, simplifying  brute force / dictionary attacks (overlaps  randomness).
218 327::Product uses 'ROT-25' to obfuscate the password in  the registry.::product only uses 'XOR' to obfuscate sensitive  data::product only uses 'XOR' and a fixed key to  obfuscate sensitive data::Product substitutes characters with other  characters in a fixed way, and also leaves certain input characters  unchanged.::Attackers can infer private IP addresses by  dividing each octet by the MD5 hash of '20'.::Product uses DES when MD5 has been specified in  the configuration, resulting in weaker-than-expected password  hashes.::Default configuration of product uses MD5 instead  of stronger algorithms that are available, simplifying forgery of  certificates.::Product uses the hash of a hash for  authentication, allowing attackers to gain privileges if they can obtain the  original hash.
219 328::Hard-coded hashed values for username and password  contained in client-side script, allowing brute-force offline  attacks.
220 
221 33::read files via '/........../' in  URL::read files via '....' in web  server::read files via '......' in web server (doubled  triple dot?)::read files via '......' in web server (doubled  triple dot?)::multiple attacks using '..', '...', and '....' in  different commands::'...' or '....' in chat  server
222 330::Crypto product uses rand() library function to  generate a recovery key, making it easier to conduct brute force  attacks.::Random number generator can repeatedly generate  the same value.::Web application generates predictable session IDs,  allowing session hijacking.::Password recovery utility generates a relatively  small number of random passwords, simplifying brute force  attacks.::Cryptographic key created with an insufficiently  random seed.::Cryptographic key created with a seed based on the  system time.::Kernel function does not have a good entropy  source just after boot.::Blogging software uses a hard-coded salt when  calculating a password hash.::Bulletin board application uses insufficiently  random names for uploaded files, allowing other users to access private  files.::Handheld device uses predictable TCP sequence  numbers, allowing spoofing or hijacking of TCP  connections.::Web management console generates session IDs based  on the login time, making it easier to conduct session  hijacking.::SSL library uses a weak random number generator  that only generates 65,536 unique keys.::Chain: insufficient precision causes extra zero  bits to be assigned, reducing entropy for an API function that generates  random numbers.::CAPTCHA implementation does not produce enough  different images, allowing bypass using a database of all possible  checksums.::DNS client uses predictable DNS transaction IDs,  allowing DNS spoofing.::Application generates passwords that are based on  the time of day.
223 331::Insufficiently random data used to generate  session tokens using C rand(). Also, for certificate/key generation, uses a  source that does not block when entropy is  low.
224 
225 
226 334::Product uses 5 alphanumeric characters for  filenames of expense claim reports, stored under web  root.::Product uses small number of random numbers for a  code to approve an action, and also uses predictable new user IDs, allowing  attackers to hijack new accounts.::SYN cookies implementation only uses 32-bit keys,  making it easier to brute force ISN.::Complex predictability / randomness (reduced  space).
227 
228 
229 
230 
231 
232 34::Merak Mail Server with Icewarp, Sep. 10,  2004
233 
234 341::DNS resolver library uses predictable IDs, which  allows a local attacker to spoof DNS query  results.::MFV. predictable filename and insecure permissions  allows file modification to execute SQL  queries.
235 342::Listening TCP ports are sequentially allocated,  allowing spoofing attacks.::Predictable TCP sequence numbers allow  spoofing.::DNS resolver uses predictable IDs, allowing a  local user to spoof DNS query results.
236 
237 344::Component for web browser writes an error message  to a known location, which can then be referenced by attackers to process  HTML/script in a less restrictive context
238 
239 346::DNS server can accept DNS updates from hosts that  it did not query, leading to cache poisoning::DNS server can accept DNS updates from hosts that  it did not query, leading to cache poisoning::DNS server caches glue records received from  non-delegated name servers::user ID obtained from untrusted source  (URL)::LDAP service does not verify if a particular  attribute was set by the LDAP server::product does not sufficiently distinguish external  HTML from internal, potentially dangerous HTML, allowing bypass using  special strings in the page title. Overlaps special  elements.::product records the reverse DNS name of a visitor  in the logs, allowing spoofing and resultant  XSS.
240 347::Does not properly verify signatures for 'trusted'  entities.::Insufficient verification allows  spoofing.::Insufficient verification allows  spoofing.::Accepts a configuration file without a Message  Integrity Check (MIC) signature.
241 348::Product uses IP address provided by a client,  instead of obtaining it from the packet headers, allowing easier  spoofing.::Web product uses the IP address in the  X-Forwarded-For HTTP header instead of a server variable that uses the  connecting IP address, allowing filter  bypass.::Similar to  CVE-2004-1950::Product logs IP address specified by the client  instead of obtaining it from the packet headers, allowing information  hiding.::PHP application uses IP address from  X-Forwarded-For HTTP header, instead of  REMOTE_ADDR.
242 349::Does not verify that trusted entity is  authoritative for all entities in its  response.
243 35::chain: '.../...//' bypasses protection mechanism  using regexp's that remove '../' resulting in collapse into an unsafe value  '../' (CWE-182) and resultant path traversal. ::'.../....///' bypasses regexp's that remove './'  and '../'
244 350::Does not do double-reverse lookup to prevent DNS  spoofing.::Does not verify reverse-resolved hostnames in  DNS.::Authentication bypass using spoofed  reverse-resolved DNS hostnames.::Authentication bypass using spoofed  reverse-resolved DNS hostnames.::Filter does not properly check the result of a  reverse DNS lookup, which could allow remote attackers to bypass intended  access restrictions via DNS spoofing.::Reverse DNS lookup used to spoof trusted content  in intermediary.::Product records the reverse DNS name of a visitor  in the logs, allowing spoofing and resultant  XSS.
245 351::Browser user interface does not distinguish  between user-initiated and synthetic events.::Product does not compare all required data in two  separate elements, causing it to think they are the same, leading to loss of  ACLs. Similar to Same Name error.
246 
247 
248 356::Product does not warn user when document contains  certain dangerous functions or macros.::Product does not warn user when document contains  certain dangerous functions or macros.::Product does not warn user when document contains  certain dangerous functions or macros.::Product does not warn user about a certificate if  it has already been accepted for a different site. Possibly  resultant.::File extractor does not warn user it setuid/setgid  files could be extracted. Overlaps  privileges/permissions.::E-mail client allows bypass of warning for  dangerous attachments via a Windows .LNK file that refers to the  attachment.
249 357::User not sufficiently warned if host key mismatch  occurs
250 358::Browser does not verify Basic Constraints of a  certificate, even though it is required, allowing spoofing of trusted  certificates.::Browser does not verify Basic Constraints of a  certificate, even though it is required, allowing spoofing of trusted  certificates.::Browser does not verify Basic Constraints of a  certificate, even though it is required, allowing spoofing of trusted  certificates.::Logic error prevents some required conditions from  being enforced during Challenge-Response Authentication Mechanism with MD5  (CRAM-MD5).::Shared secret not verified in a RADIUS response  packet, allowing authentication bypass by spoofing server  replies.::Insufficient verification in VoIP implementation,  in violation of standard, allows spoofed  messages.::Insufficient verification in VoIP implementation,  in violation of standard, allows spoofed  messages.::Security check not applied to all components,  allowing bypass.
251 
252 
253 
254 362::Race condition leading to a crash by calling a  hook removal procedure while other activities are occurring at the same  time.::chain: time-of-check time-of-use (TOCTOU) race  condition in program allows bypass of protection mechanism that was designed  to prevent symlink attacks.::chain: time-of-check time-of-use (TOCTOU) race  condition in program allows bypass of protection mechanism that was designed  to prevent symlink attacks.::Unsynchronized caching operation enables a race  condition that causes messages to be sent to a deallocated  object.::Race condition during initialization triggers a  buffer overflow.::Daemon crash by quickly performing operations and  undoing them, which eventually leads to an operation that does not acquire a  lock.::chain: race condition triggers NULL pointer  dereference::Race condition in library function could cause  data to be sent to the wrong process.::Race condition in file parser leads to heap  corruption.::chain: race condition allows attacker to access an  object while it is still being initialized, causing software to access  uninitialized memory.::chain: race condition for an argument value,  possibly resulting in NULL dereference::chain: race condition might allow resource to be  released before operating on it, leading to NULL dereference 
255 
256 364::Signal handler does not disable other signal  handlers, allowing it to be interrupted, causing other functionality to  access files/etc. with raised privileges::Attacker can send a signal while another signal  handler is already running, leading to crash or execution with root  privileges::unsafe calls to library functions from signal  handler::SIGURG can be used to remotely interrupt signal  handler; other variants exist::handler for SIGCHLD uses non-reentrant  functions
257 
258 
259 367::chain: time-of-check time-of-use (TOCTOU) race  condition in program allows bypass of protection mechanism that was designed  to prevent symlink attacks.::chain: time-of-check time-of-use (TOCTOU) race  condition in program allows bypass of protection mechanism that was designed  to prevent symlink attacks.
260 368::Chain: race condition (CWE-362) from improper  handling of a page transition in web client while an applet is loading  (CWE-368) leads to use after free (CWE-416)::Browser updates address bar as soon as user clicks  on a link instead of when the page has loaded, allowing spoofing by  redirecting to another page using onUnload method. ** this is one example of  the role of 'hooks' and context switches, and should be captured somehow -  also a race condition of sorts **::XSS when web browser executes Javascript events in  the context of a new page while it's being loaded, allowing interaction with  previous page in different domain.::Web browser fills in address bar of clicked-on  link before page has been loaded, and doesn't update  afterward.
261 369::Invalid size value leads to divide by  zero.::'Empty' content triggers divide by  zero.::Height value of 0 triggers divide by  zero.
262 37::Multiple FTP clients write arbitrary files via  absolute paths in server responses::ZIP file extractor allows full  path::Path traversal using absolute  pathname::Path traversal using absolute  pathname::Path traversal using absolute  pathname::Arbitrary files may be overwritten via compressed  attachments that specify absolute path names for the decompressed  output.
263 
264 
265 
266 
267 
268 
269 
270 
271 
272 
273 
274 
275 39::FTP server read/access arbitrary files using 'C:\'  filenames
276 
277 
278 392::Function returns 'OK' even if another function  returns a different status code than expected, leading to accepting an  invalid PIN number.::Error checking routine in PKCS#11 library returns  'OK' status even when invalid signature is detected, allowing spoofed  messages.::Kernel function truncates long pathnames without  generating an error, leading to operation on wrong  directory.::Function returns non-error value when a particular  erroneous condition is encountered, leading to resultant NULL  dereference.
279 393::DNS server returns wrong response code for  non-existent AAAA record, which effectively says that the domain is  inaccessible.::Hardware-specific implementation of system call  causes incorrect results from geteuid.::System call returns wrong value, leading to a  resultant NULL dereference.
280 394::Certain packets (zero byte and other lengths)  cause a recvfrom call to produce an unexpected return code that causes a  server's listening loop to exit.::Unchecked return code from recv() leads to  infinite loop.::Kernel function does not properly handle when a  null is returned by a function call, causing it to call another function  that it shouldn't.::Memory not properly cleared when read() function  call returns fewer bytes than expected.::Bypass access restrictions when connecting from IP  whose DNS reverse lookup does not return a  hostname.::Bypass access restrictions when connecting from IP  whose DNS reverse lookup does not return a  hostname.::Game server doesn't check return values for  functions that handle text strings and associated size  values.::Resultant infinite loop when function call returns  -1 value.
281 
282 
283 
284 
285 
286 400::Product allows attackers to cause a crash via a  large number of connections.::Malformed request triggers uncontrolled recursion,  leading to stack exhaustion.::Chain: memory leak (CWE-404) leads to resource  exhaustion.::Driver does not use a maximum width when invoking  sscanf style functions, causing stack  consumption.::Large integer value for a length property in an  object causes a large amount of memory  allocation.::Web application firewall consumes excessive memory  when an HTTP request contains a large Content-Length value but no POST  data.::Product allows exhaustion of file descriptors when  processing a large number of TCP packets.::Communication product allows memory consumption  with a large number of SIP requests, which cause many sessions to be  created.::TCP implementation allows attackers to consume CPU  and prevent new connections using a TCP SYN flood  attack.::Port scan triggers CPU consumption with processes  that attempt to read data from closed  sockets.::Product allows attackers to cause a denial of  service via a large number of directives, each of which opens a separate  window.::Product allows resource exhaustion via a large  number of calls that do not complete a 3-way  handshake.::Mail server does not properly handle deeply nested  multipart MIME messages, leading to stack exhaustion. ::Chain: anti-virus product encounters a malformed  file but returns from a function without closing a file descriptor (CWE-775)  leading to file descriptor consumption (CWE-400) and failed scans. 
287 401::Memory leak because function does not free() an  element of a data structure.::Memory leak when counter variable is not  decremented.::Memory leak when counter variable is not  decremented.::Kernel uses wrong function to release a data  structure, preventing data from being properly tracked by other  code.::Memory leak via unknown manipulations as part of  protocol test suite.::Memory leak via a series of the same  command.
288 
289 403::File descriptor leak allows read of restricted  files.::Access to restricted resource using modified file  descriptor for stderr.::Open file descriptor used as alternate channel in  complex race condition.::Program does not fully drop privileges after  creating a file descriptor, which allows access to the descriptor via a  separate vulnerability.::User bypasses restrictions by obtaining a file  descriptor then calling setuid program, which does not close the  descriptor.::Terminal manager does not properly close file  descriptors, allowing attackers to access terminals of other  users.
290 404::Does not shut down named pipe connections if  malformed data is sent.::Sockets not properly closed when attacker  repeatedly connects and disconnects from  server.::Return values of file/socket operations not  checked, allowing resultant consumption of file  descriptors.
291 
292 406::Smurf attack, spoofed ICMP packets to broadcast  addresses.::DNS query with spoofed source address causes more  traffic to be returned to spoofed address than was sent by the  attacker.::Large datagrams are sent in response to malformed  datagrams.::Game server sends a large  amount.
293 407::CPU consumption via inputs that cause many hash  table collisions.::CPU consumption via inputs that cause many hash  table collisions.::Product performs unnecessary processing before  dropping an invalid packet.::CPU and memory consumption using many  wildcards.::Product allows attackers to cause multiple copies  of a program to be loaded more quickly than the program can detect that  other copies are running, then exit. This type of error should probably have  its own category, where teardown takes more time than  initialization.::Memory leak by performing actions faster than the  software can clear them.
294 408::Tool creates directories before authenticating  user. 
295 
296 
297 410::Large number of locks on file exhausts the pool  and causes crash.::Product supports only one connection and does not  disconnect a user who does not provide  credentials.::Large number of connections without providing  credentials allows connection exhaustion.
298 412::Program can not execute when attacker obtains a  mutex.::Program can not execute when attacker obtains a  lock on a critical output file.::Program can not execute when attacker obtains a  lock on a critical output file.::Critical file can be opened with exclusive read  access by user, preventing application of security policy. Possibly related  to improper permissions, large-window race condition. ::Chain: predictable file names used for locking,  allowing attacker to create the lock beforehand. Resultant from permissions  and randomness.::Chain: Lock files with predictable names.  Resultant from randomness.::Product does not check if it can write to a log  file, allowing attackers to avoid logging by accessing the file using an  exclusive lock. Overlaps unchecked error condition. This is not quite  CWE-412, but close.
299 
300 414::Product does not properly check if a lock is  present, allowing other attackers to access  functionality.
301 415::Chain: Signal handler contains too much  functionality (CWE-828), introducing a race condition that leads to a double  free (CWE-415).::Double free resultant from certain error  conditions.::Double free resultant from certain error  conditions.::Double free resultant from certain error  conditions.::Double free from invalid ASN.1  encoding.::Double free from malformed  GIF.::Double free from malformed  GIF.::Double free from malformed compressed  data.
302 416::Use-after-free triggered by closing a connection  while data is still being transmitted.::Improper allocation for invalid data leads to  use-after-free.::certificate with a large number of Subject  Alternate Names not properly handled in realloc, leading to  use-after-free::Timers are not disabled when a related object is  deleted::Access to a 'dead' object that is being cleaned  up::object is deleted even with a non-zero reference  count, and later accessed::use-after-free involving request containing an  invalid version number::unload of an object that is currently being  accessed by other functionality::incorrectly tracking a reference count leads to  use-after-free::use-after-free related to use of uninitialized  memory::HTML document with incorrectly-nested  tags::Use after free in ActiveX object by providing a  malformed argument to a method::use-after-free by disconnecting during data  transfer, or a message containing incorrect data  types::disconnect during a large data transfer causes  incorrect reference count, leading to  use-after-free::use-after-free found by  fuzzing::Chain: race condition (CWE-362) from improper  handling of a page transition in web client while an applet is loading  (CWE-368) leads to use after free (CWE-416)::realloc generates new buffer and pointer, but  previous pointer is still retained, leading to use after  free::Use-after-free in web browser, probably resultant  from not initializing memory.::use-after-free when one thread accessed memory  that was freed by another thread::assignment of malformed values to certain  properties triggers use after free::mail server does not properly handle a long  header.:: chain: integer overflow leads to  use-after-free::freed pointer  dereference
303 
304 42::Source code disclosure using trailing  dot::Source code disclosure using trailing  dot::Source code disclosure using trailing  dot::Source code disclosure using trailing  dot::Bypass directory access restrictions using  trailing dot in URL::Bypass directory access restrictions using  trailing dot in URL::Bypass check for '.lnk' extension using  '.lnk.'
305 420::DB server assumes that local clients have  performed authentication, allowing attacker to directly connect to a process  to load libraries and execute commands; a socket interface also exists  (another alternate channel), so attack can be  remote.::Product does not restrict access to underlying  database, so attacker can bypass restrictions by directly querying the  database.::User can avoid lockouts by using an API instead of  the GUI to conduct brute force password  guessing.::FTP service can not be disabled even when other  access controls would require it.::Windows named pipe created without  authentication/access control, allowing configuration  modification.::Router management interface spawns a separate TCP  connection after authentication, allowing hijacking by attacker coming from  the same IP address.
306 421::FTP 'Pizza Thief' vulnerability. Attacker can  connect to a port that was intended for use by another  client.::Product creates Windows named pipe during  authentication that another attacker can hijack by connecting to  it.
307 422::Bypass GUI and access restricted dialog  box.::Gain privileges via Windows  message.::A control allows a change to a pointer for a  callback function using Windows message.::Product launches Help functionality while running  with raised privileges, allowing command execution using Windows message to  access 'open file' dialog.::Attacker uses Shatter attack to bypass  GUI-enforced protection for CVE-2003-0908.::User can call certain API functions to modify  certain properties of privileged programs.
308 
309 425::Bypass authentication via direct  request.::Infinite loop or infoleak triggered by direct  requests.::Bypass auth/auth via direct  request.::Direct request leads to infoleak by  error.::Direct request leads to infoleak by  error.::Direct request leads to infoleak by  error.::Authentication bypass via direct  request.::Authentication bypass via direct  request.::Authorization bypass using direct  request.::Access privileged functionality using direct  request.::Upload arbitrary files via direct  request.
310 427::'DLL hijacking' issue in document  editor.::'DLL hijacking' issue in encryption  software.::'DLL hijacking' issue in library used by multiple  media players.::'DLL hijacking' issue in illustration  program.::'DLL hijacking' issue in address  book.::'DLL hijacking' issue in network monitoring  software.::'DLL hijacking' issue in web  browser.::'DLL hijacking' issue in music  player/organizer.::Error during packaging causes product to include a  hard-coded, non-standard directory in search  path.::Product searches current working directory for  configuration file.::Product searches current working directory for  configuration file.::Product executable other program from current  working directory.::Untrusted path.::Modification of trusted environment variable leads  to untrusted path vulnerability.::Product searches /tmp for modules before other  paths.
311 428::Small handful of others. Program doesn't quote the  'C:\Program Files\' path when calling a program to be executed - or any  other path with a directory or file whose name contains a space - so  attacker can put a malicious program.exe into  C:.::CreateProcess() and CreateProcessAsUser() can be  misused by applications to allow 'program.exe' style attacks in  C:::Applies to 'Common Files' folder, with a malicious  common.exe, instead of 'Program  Files'/program.exe.
312 43::Apache + Resin Reveals JSP Source Code  ...::Multiple trailing dot allows directory  listing
313 430::Source code disclosure via manipulated file  extension that causes parsing by wrong DLL.::Web browser does not properly handle the  Content-Type header field, causing a different application to process the  document.::Source code disclosure by directly invoking a  servlet.::Arbitrary Perl functions can be loaded by calling  a non-existent function that activates a  handler.
314 
315 
316 433::'.inc' file stored under web document root and  returned unparsed by the server::'.inc' file stored under web document root and  returned unparsed by the server::'.inc' file stored under web document root and  returned unparsed by the server::'.inc' file stored under web document root and  returned unparsed by the server::direct request to .pl file leaves it  unparsed::.inc file::unparsed config.conf  file::Chain: uppercase file extensions causes web server  to return script source code instead of executing the  script.
317 434::Web-based mail product stores '.shtml' attachments  that could contain SSI::PHP upload does not restrict file  types::upload and execution of .php  file::upload file with dangerous  extension::program does not restrict file  types::improper type checking of uploaded  files::Double 'php' extension leaves an active php  extension in the generated filename.::ASP program allows upload of .asp files by  bypassing client-side checks::ASP file upload::ASP file upload
318 
319 436::Bypass filters or poison web cache using requests  with multiple Content-Length headers, a non-standard  behavior.::Anti-virus product allows bypass via Content-Type  and Content-Disposition headers that are mixed case, which are still  processed by some clients.::FTP clients sending a command with 'PASV' in the  argument can cause firewalls to misinterpret the server's error as a valid  response, allowing filter bypass.::FTP clients sending a command with 'PASV' in the  argument can cause firewalls to misinterpret the server's error as a valid  response, allowing filter bypass.::Virus product bypass with spaces between MIME  header fields and the ':' separator, a non-standard message that is accepted  by some clients.::AV product detection bypass using inconsistency  manipulation (file extension in MIME Content-Type vs. Content-Disposition  field).::CMS system allows uploads of files with GIF/JPG  extensions, but if they contain HTML, Internet Explorer renders them as HTML  instead of images.::Interpretation conflict allows XSS via invalid  '<' when a '>' is expected, which is treated as '>' by many web  browsers.::Interpretation conflict (non-standard behavior)  enables XSS because browser ignores invalid characters in the middle of  tags.
320 
321 439::Linux kernel 2.2 and above allow promiscuous mode  using a different method than previous versions, and ifconfig is not aware  of the new method (alternate path property).::Product uses defunct method from another product  that does not return an error code and allows detection  avoidance.::chain: Code was ported from a case-sensitive Unix  platform to a case-insensitive Windows platform where filetype handlers  treat .jsp and .JSP as different extensions. JSP source code may be read  because .JSP defaults to the filetype 'text'. 
322 
323 440::Inconsistency in support of linked lists causes  program to use large timeouts on 'undeserving'  connections.::'strncpy' in Linux kernel acts different than libc  on x86, leading to expected behavior difference - sort of a multiple  interpretation error?::Buffer overflow in product stems to the use of a  third party library function that is expected to have internal protection  against overflows, but doesn't.
324 441::Portmapper could redirect service requests from an  attacker to another entity, which thinks the requests came from the  portmapper.::FTP server does not ensure that the IP address in  a PORT command is the same as the FTP user's session, allowing port scanning  by proxy.::Web server allows attackers to request a URL from  another server, including other ports, which allows proxied  scanning.::CGI script accepts and retrieves incoming  URLs.::MFV - bounce attack allows access to TFTP from  trusted side.::FTP bounce attack. Protocol allows attacker to  modify the PORT command to cause the FTP server to connect to other machines  besides the attacker's. Similar to proxied trusted  channel.
325 444::Web servers allow request smuggling via  inconsistent Transfer-Encoding and Content-Length  headers.::Web servers allow request smuggling via  inconsistent Transfer-Encoding and Content-Length  headers.::Web servers allow request smuggling via  inconsistent Transfer-Encoding and Content-Length  headers.::Web servers allow request smuggling via  inconsistent Transfer-Encoding and Content-Length  headers.::Web servers allow request smuggling via  inconsistent Transfer-Encoding and Content-Length  headers.::Web servers allow request smuggling via  inconsistent Transfer-Encoding and Content-Length  headers.::Web servers allow request smuggling via  inconsistent Transfer-Encoding and Content-Length  headers.
326 446::UI inconsistency; visited URLs list not cleared  when 'Clear History' option is selected.
327 447::GUI configuration tool does not enable a security  option when a checkbox is selected, although that option is honored when  manually set in the configuration file.::Router does not implement a specific keyword when  it is used in an ACL, allowing filter bypass.::Router does not implement a specific keyword when  it is used in an ACL, allowing filter bypass.::Web browser does not properly modify security  setting when the user sets it.
328 
329 449::Network firewall accidentally implements one  command line option as if it were another, possibly leading to behavioral  infoleak.::Command line option correctly suppresses a user  prompt but does not properly disable a feature, although when the product  prompts the user, the feature is properly  disabled.::Product does not 'time out' according to user  specification, leaving sensitive data available after it has  expired.
330 
331 
332 451::Attachment with many spaces in filename bypasses  'dangerous content' warning and uses different icon. Likely  resultant.::Misrepresentation and equivalence  issue.::Lock spoofing from several different  Weaknesses.::Wrong status / state notifier -- Lock icon  displayed when an insecure page loads a binary file loaded from a trusted  site.::Wrong status / state notifier -- Secure 'lock'  icon is presented for one channel, while an insecure page is being  simultaneously loaded in another channel.::Wrong status / state notifier -- Certain redirect  sequences cause security lock icon to appear in web browser, even when page  is not encrypted.::Wrong status / state notifier -- Spoofing via  multi-step attack that causes incorrect information to be displayed in  browser address bar.::Overlay -- Wide 'favorites' icon can overlay and  obscure address bar::Overlay -- GUI overlay vulnerability  (misrepresentation)::Visual distinction -- Web browsers do not clearly  associate a Javascript dialog box with the web page that generated it,  allowing spoof of the source of the dialog. 'origin validation error' of a  sort?::Visual distinction -- Web browsers do not clearly  associate a Javascript dialog box with the web page that generated it,  allowing spoof of the source of the dialog. 'origin validation error' of a  sort?::Visual distinction -- Web browsers do not clearly  associate a Javascript dialog box with the web page that generated it,  allowing spoof of the source of the dialog. 'origin validation error' of a  sort?::Visual distinction -- Web browsers do not clearly  associate a Javascript dialog box with the web page that generated it,  allowing spoof of the source of the dialog. 'origin validation error' of a  sort?::Visual distinction -- Browser allows attackers to  create chromeless windows and spoof victim's display using unprotected  Javascript method.::Visual distinction -- Chat client allows remote  attackers to spoof encrypted, trusted messages with lines that begin with a  special sequence, which makes the message appear  legitimate.::Visual distinction -- Product allows spoofing  names of other users by registering with a username containing hex-encoded  characters.::Visual truncation -- Special character in URL  causes web browser to truncate the user portion of the 'user@domain' URL,  hiding real domain in the address bar.::Visual truncation -- Chat client does not display  long filenames in file dialog boxes, allowing dangerous extensions via  manipulations including (1) many spaces and (2) multiple file  extensions.::Visual truncation -- Web browser file download  type hiding using whitespace.::Visual truncation -- Visual truncation in chat  client using whitespace to hide dangerous file  extension.::Visual truncation -- Dialog box in web browser  allows user to spoof the hostname via a long 'user:pass' sequence in the  URL, which appears before the real hostname.::Visual truncation -- GUI obfuscation (visual  truncation) in web browser - obscure URLs using a large amount of  whitespace. Note - 'visual truncation' covers a couple  variants.::Visual truncation -- Null character in URL  prevents entire URL from being displayed in web  browser.::Miscellaneous -- [step-based attack, GUI] --  Password-protected tab can be bypassed by switching to another tab, then  back to original tab.::Miscellaneous -- Dangerous file extensions not  displayed.::Miscellaneous -- Web browser allows remote  attackers to misrepresent the source of a file in the File Download dialogue  box.
333 
334 454::Does not clear dangerous environment variables,  enabling symlink attack.::Specify alternate configuration directory in  environment variable, enabling untrusted  path.::Dangerous environment variable not  cleansed.::Specify arbitrary modules using environment  variable.
335 455::Product does not trigger a fatal error if missing  or invalid ACLs are in a configuration file.
336 456::Product uses uninitialized variables for size and  index, leading to resultant buffer overflow.::Internal variable in PHP application is not  initialized, allowing external modification.::Array variable not initialized in PHP application,  leading to resultant SQL injection.
337 457::Uninitialized variable leads to code execution in  popular desktop application.::Crafted input triggers dereference of an  uninitialized object pointer.::Crafted audio file triggers crash when an  uninitialized variable is used.::Uninitialized random seed variable  used.
338 459::World-readable temporary file not deleted after  use.::Temporary file not deleted after use, leaking  database usernames and passwords.::Interaction error creates a temporary file that  can not be deleted due to strong permissions.::Alternate data streams for NTFS files are not  cleared when files are wiped (alternate channel /  infoleak).::Alternate data streams for NTFS files are not  cleared when files are wiped (alternate channel /  infoleak).::Alternate data streams for NTFS files are not  cleared when files are wiped (alternate channel /  infoleak).::Alternate data streams for NTFS files are not  cleared when files are wiped (alternate channel /  infoleak).::Alternate data streams for NTFS files are not  cleared when files are wiped (alternate channel /  infoleak).::Users not logged out when application is restarted  after security-relevant changes were made.
339 46::Source disclosure via trailing encoded space  '%20'::Source disclosure via trailing encoded space  '%20'::Source disclosure via trailing encoded space  '%20'::Source disclosure via trailing encoded space  '%20'::Source disclosure via trailing encoded space  '%20'::Source disclosure via trailing encoded space  '%20'::Source disclosure via trailing encoded space  '%20'::Source disclosure via trailing encoded space  '%20'::Multi-Factor Vulnerability (MVF). directory  traversal and other issues in FTP server using Web encodings such as '%20';  certain manipulations have unusual side  effects.::Trailing space ('+' in query string) leads to  source code disclosure.
340 
341 
342 
343 
344 
345 
346 
347 
348 
349 470::Database system allows attackers to bypass sandbox  restrictions by using the Reflection APi.
350 471::Relies on $PHP_SELF variable for  authentication.::Gain privileges by modifying assumed-immutable  code addresses that are accessed by a driver.
351 472::Forum product allows spoofed messages of other  users via hidden form fields for name and e-mail  address.::Shopping cart allows price modification via hidden  form field.::Shopping cart allows price modification via hidden  form field.::Shopping cart allows price modification via hidden  form field.::Shopping cart allows price modification via hidden  form field.::Shopping cart allows price modification via hidden  form field.::Allows admin access by modifying value of form  field.::Read messages by modifying message ID  parameter.::Send email to arbitrary users by modifying email  parameter.::Authentication bypass by setting a  parameter.::Product does not check authorization for  configuration change admin script, leading to password theft via modified  e-mail address field.::Logic error leads to password  disclosure.::Modification of message number parameter allows  attackers to read other people's messages.
352 473::File upload allows arbitrary file read by setting  hidden form variables to match internal variable  names.::Mistakenly trusts $PHP_SELF variable to determine  if include script was called by its parent.::PHP remote file inclusion by modified  assumed-immutable variable.::Modify key variable when calling scripts that  don't load a library that initializes it.::Authentication bypass by modifying array used for  authentication.
353 
354 
355 476::race condition causes a table to be corrupted if a  timer activates while it is being modified, leading to resultant NULL  dereference; also involves locking.::large number of packets leads to NULL  dereference::packet with invalid error status value triggers  NULL dereference::chain: race condition for an argument value,  possibly resulting in NULL dereference::chain: race condition might allow resource to be  released before operating on it, leading to NULL dereference ::chain: some unprivileged ioctls do not verify that  a structure has been initialized before invocation, leading to NULL  dereference::chain: IP and UDP layers each track the same value  with different mechanisms that can get out of sync, possibly resulting in a  NULL dereference::chain: uninitialized function pointers can be  dereferenced allowing code execution::chain: improper initialization of memory can lead  to NULL dereference::chain: game server can access player data  structures before initialization has happened leading to NULL  dereference::chain: unchecked return value can lead to NULL  dereference
356 
357 
358 479::signal handler calls function that ultimately uses  malloc()::handler for SIGCHLD uses non-reentrant  functions
359 48::Filenames with spaces allow arbitrary file  deletion when the product does not properly quote them; some overlap with  path traversal.::'+' characters in query string converted to spaces  before sensitive file/extension (internal space), leading to bypass of  access restrictions to the file.
360 
361 
362 
363 
364 
365 
366 
367 
368 
369 
370 49::Overlaps infoleak::Bypass Basic Authentication for files using  trailing '/'::Read sensitive files with trailing  '/'
371 
372 
373 
374 494::OS does not verify authenticity of its own  updates.::online poker client does not verify authenticity  of its own updates.::anti-virus product does not verify automatic  updates for itself.::VOIP phone downloads applications from web sites  without verifying integrity.
375 
376 
377 
378 
379 
380 
381 50::Access directory using multiple leading  slash.::Bypass access restrictions via multiple leading  slash, which causes a regular expression to  fail.::Archive extracts to arbitrary files using multiple  leading slash in filenames in the archive.
382 
383 
384 
385 
386 
387 
388 
389 51::Read files with full pathname using multiple  internal slash.
390 
391 
392 
393 
394 
395 52::Directory listings in web server using multiple  trailing slash
396 
397 
398 
399 
400 
401 
402 
403 
404 
405 
406 
407 
408 
409 
410 
411 
412 
413 
414 
415 
416 
417 
418 
419 
420 
421 
422 
423 
424 
425 
426 
427 
428 55::Possibly (could be a cleansing  error)::'/./////etc' cleansed to './//etc' then  '/etc'
429 
430 
431 
432 
433 
434 
435 
436 
437 56::List directories using desired path and  '*'::List files in web server using  '*.ext'
438 
439 
440 
441 
442 
443 
444 
445 
446 
447 57::application check access for restricted URL before  canonicalization::CGI source disclosure using  'dirname/../cgi-bin'
448 
449 
450 
451 
452 
453 
454 
455 
456 
457 
458 58::Multiple web servers allow restriction bypass  using 8.3 names instead of long names::Source code disclosure using 8.3 file  name.::Multi-Factor Vulnerability. Product generates  temporary filenames using long filenames, which become predictable in 8.3  format.
459 
460 
461 
462 
463 
464 
465 
466 
467 
468 
469 
470 
471 
472 
473 
474 
475 
476 
477 
478 
479 
480 
481 
482 601::URL parameter loads the URL into a frame and  causes it to appear to be part of a valid  page.::An open redirect vulnerability in the search  script in the software allows remote attackers to redirect users to  arbitrary web sites and conduct phishing attacks via a URL as a parameter to  the proper function.::Open redirect vulnerability in the software allows  remote attackers to redirect users to arbitrary web sites and conduct  phishing attacks via a URL in the proper  parameter.
483 602::ASP program allows upload of .asp files by  bypassing client-side checks.::steganography products embed password information  in the carrier file, which can be extracted from a modified  client.::steganography products embed password information  in the carrier file, which can be extracted from a modified  client.::client allows server to modify client's  configuration and overwrite arbitrary files.
484 603::Client-side check for a password allows access to  a server using crafted XML requests from a modified  client.
485 
486 
487 
488 
489 
490 
491 611::A browser control can allow remote attackers to  determine the existence of files via Javascript containing XML script, aka  the 'XML External Entity vulnerability.'
492 
493 
494 614::A product does not set the Secure attribute for  sensitive cookies in HTTPS sessions, which could cause the user agent to  send those cookies in plaintext over an HTTP session with the  product.::A product does not set the secure flag for the  session cookie in an https session, which can cause the cookie to be sent in  http requests and make it easier for remote attackers to capture this  cookie.::A product does not set the secure flag for the  session cookie in an https session, which can cause the cookie to be sent in  http requests and make it easier for remote attackers to capture this  cookie.::A product does not set the secure flag for a  cookie in an https session, which can cause the cookie to be sent in http  requests and make it easier for remote attackers to capture this  cookie.
495 615::Version numbers and internal hostnames leaked in  HTML comments.::CMS places full pathname of server in HTML  comment.::blog software leaks real username in HTML  comment.
496 616::program does not distinguish between normal $_POST  variables and the ones that are used for recognizing that a file has been  downloaded.::product doesn't check if the variables for an  upload were set by uploading the file, or other methods such as  $_POST.::PHP web forum does not properly verify whether a  file was uploaded, allowing attackers to reference other files by modifying  POST variables.::product does not distinguish uploaded file from  other files.::PHP script does not restrict access to uploaded  files. Overlaps container error.
497 617::Chain: security monitoring product has an  off-by-one error that leads to unexpected length values, triggering an  assertion.
498 618::download a file to arbitrary  folders.::control downloads and executes a url in a  parameter::resultant buffer  overflow
499 
500 62::Hard link attack, file overwrite; interesting  because program checks against soft links::Hard link race  condition::OpenBSD chpass/chfn/chsh file content  leak
501 620::Web application password change utility doesn't  check the original password.
502 621::extract issue enables file  inclusion::extract used for register_globals compatibility  layer, enables path traversal::extract() buried in include files makes  post-disclosure analysis confusing; original report had seemed  incorrect.::extract() enables static code  injection::import_request_variables() buried in include files  makes post-disclosure analysis confusing
503 622::DoS in firewall using standard Microsoft  functions::DoS in firewall using standard Microsoft  functions::function does not verify that its argument is the  proper type, leading to arbitrary memory  write::invalid syscall arguments bypass code execution  limits::DoS in IDS via NULL  argument
504 623::add emails to spam  whitelist::web browser uses certain COM objects as  ActiveX::kiosk allows bypass to read  files
505 624::executable regexp in PHP by inserting 'e' modifier  into first argument to preg_replace::executable regexp in PHP by inserting 'e' modifier  into first argument to preg_replace::complex curly syntax inserted into the replacement  argument to PHP preg_replace(), which uses the '/e'  modifier
506 625::'.*' regexp leads to static code  injection::insertion of username into regexp results in  partial comparison, causing wrong database entry to be updated when one  username is a substring of another.::regexp intended to verify that all characters are  legal, only checks that at least one is legal, enabling file  inclusion.::Regexp for IP address isn't anchored at the end,  allowing appending of shell metacharacters.::Regexp isn't 'anchored' to the beginning or end,  which allows spoofed values that have trusted values as  substrings.::regexp in .htaccess file allows access of files  whose names contain certain substrings::allow load of macro files whose names contain  certain substrings.::VIM Mailing list, March 14,  2006
507 626::NUL byte bypasses PHP regular expression  check::inserting SQL after a NUL byte bypasses whitelist  regexp, enabling SQL injection
508 
509 628::The method calls the functions with the wrong  argument order, which allows remote attackers to bypass intended access  restrictions.
510 636::The failure of connection attempts in a web  browser resets DNS pin restrictions. An attacker can then bypass the same  origin policy by rebinding a domain name to a different IP address. This was  an attempt to 'fail functional.'::Incorrect prioritization leads to the selection of  a weaker cipher. Although it is not known whether this issue occurred in  implementation or design, it is feasible that a poorly designed algorithm  could be a factor.
511 637::Support for complex regular expressions leads to a  resultant algorithmic complexity weakness  (CWE-407).::Either a filename extension and a Content-Type  header could be used to infer the file type, but the developer only checks  the Content-Type, enabling unrestricted file upload  (CWE-434).::In Apache environments, a 'filename.php.gif' can  be redirected to the PHP interpreter instead of being sent as an image/gif  directly to the user. Not knowing this, the developer only checks the last  extension of a submitted filename, enabling arbitrary code  execution.::The developer cleanses the $_REQUEST superglobal  array, but PHP also populates $_GET, allowing attackers to bypass the  protection mechanism and conduct SQL injection attacks against code that  uses $_GET.
512 638::Server does not properly validate client  certificates when reusing cached connections.
513 
514 64::'.LNK.' - .LNK with trailing  dot::Rootkits can bypass file access restrictions to  Windows kernel directories using NtCreateSymbolicLinkObject function to  create symbolic link
515 640::A famous example of this type of weakness being  exploited is the eBay attack. eBay always displays the user id of the  highest bidder. In the final minutes of the auction, one of the bidders  could try to log in as the highest bidder three times. After three incorrect  log in attempts, eBay password throttling would kick in and lock out the  highest bidder's account for some time. An attacker could then make their  own bid and their victim would not have a chance to place the counter bid  because they would be locked out. Thus an attacker could win the  auction.
516 641::Format string vulnerability in Dia 0.94 allows  user-assisted attackers to cause a denial of service (crash) and possibly  execute arbitrary code by triggering errors or warnings, as demonstrated via  format string specifiers in a .bmp filename. [CVE-2006-2480 available at:  http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-2480  ]
517 642::Mail client stores password hashes for unrelated  accounts in a hidden form field.::Privileged program trusts user-specified  environment variable to modify critical configuration  settings.::Telnet daemon allows remote clients to specify  critical environment variables for the server, leading to code  execution.::Untrusted search path vulnerability through  modified LD_LIBRARY_PATH environment  variable.::Untrusted search path vulnerability through  modified LD_LIBRARY_PATH environment  variable.::Calendar application allows bypass of  authentication by setting a certain cookie value to  1.::Setting of a language preference in a cookie  enables path traversal attack.::Application allows admin privileges by setting a  cookie value to 'admin.'::Application allows admin privileges by setting a  cookie value to 'admin.'::Application allows admin privileges by setting a  cookie value to 'admin.'::Shopping cart allows price modification via hidden  form field.::Shopping cart allows price modification via hidden  form field.::Server allows client to specify the search path,  which can be modified to point to a program that the client has  uploaded.
518 
519 644::Web server does not remove the Expect header from  an HTTP request when it is reflected back in an error message, allowing a  Flash SWF file to perform XSS attacks.
520 645::A famous example of this type an attack is the  eBay attack. eBay always displays the user id of the highest bidder. In the  final minutes of the auction, one of the bidders could try to log in as the  highest bidder three times. After three incorrect log in attempts, eBay  password throttling would kick in and lock out the highest bidder's account  for some time. An attacker could then make their own bid and their victim  would not have a chance to place the counter bid because they would be  locked out. Thus an attacker could win the  auction.
521 
522 647::Example from CAPEC (CAPEC ID: 4, 'Using  Alternative IP Address Encodings'). An attacker identifies an application  server that applies a security policy based on the domain and application  name, so the access control policy covers authentication and authorization  for anyone accessing http://example.domain:8080/application. However, by  putting in the IP address of the host the application authentication and  authorization controls may be bypassed http://192.168.0.1:8080/application.  The attacker relies on the victim applying policy to the namespace  abstraction and not having a default deny policy in place to manage  exceptions.
523 648::From http://xforce.iss.net/xforce/xfdb/12848:  man-db is a Unix utility that displays online help files. man-db versions  2.3.12 beta and 2.3.18 to 2.4.1 could allow a local attacker to gain  privileges, caused by a vulnerability when the open_cat_stream function is  called. If man-db is installed setuid, a local attacker could exploit this  vulnerability to gain 'man' user privileges.
524 649::An IPSec configuration does not perform integrity  checking of the IPSec packet as the result of either not configuring ESP  properly to support the integrity service or using AH improperly. In either  case, the security gateway receiving the IPSec packet would not validate the  integrity of the packet to ensure that it was not changed. Thus if the  packets were intercepted the attacker could undetectably change some of the  bits in the packets. The meaningful bit flipping was possible due to the  known weaknesses in the CBC encryption mode. Since the attacker knew the  structure of the packet, he or she was able (in one variation of the attack)  to use bit flipping to change the destination IP of the packet to the  destination machine controlled by the attacker. And so the destination  security gateway would decrypt the packet and then forward the plaintext to  the machine controlled by the attacker. The attacker could then read the  original message. For instance if VPN was used with the vulnerable IPSec  configuration the attacker could read the victim's e-mail. This  vulnerability demonstrates the need to enforce the integrity service  properly when critical data could be modified by an attacker. This problem  might have also been mitigated by using an encryption mode that is not  susceptible to bit flipping attacks, but the preferred mechanism to address  this problem still remains message verification for integrity. While this  attack focuses on the network layer and requires a man in the middle  scenario, the situation is not much different at the software level where an  attacker can modify tokens/parameters used by the  application.
525 
526 650::The HTTP GET method is designed to retrieve  resources and not to alter the state of the application or resources on the  server side. However, developers can easily code programs that accept a HTTP  GET request that do in fact create, update or delete data on the server.  Both Flickr  (http://www.flickr.com/services/api/flickr.photosets.delete.html) and  del.icio.us (http://del.icio.us/api/posts/delete) have implemented delete  operations using standard HTTP GET requests. These HTTP GET methods do  delete data on the server side, despite being called from GET, which is not  supposed to alter state.
527 651::The WSDL for a service providing information on  the best price of a certain item exposes the following method: float  getBestPrice(String ItemID) An attacker might guess that there is a method  setBestPrice (String ItemID, float Price) that is available and invoke that  method to try and change the best price of a given item to their advantage.  The attack may succeed if the attacker correctly guesses the name of the  method, the method does not have proper access controls around it and the  service itself has the functionality to update the best price of the  item.
528 652::From CAPEC 84: An attacker can pass XQuery  expressions embedded in otherwise standard XML documents. Like SQL injection  attacks, the attacker tunnels through the application entry point to target  the resource access layer. The string below is an example of an attacker  accessing the accounts.xml to request the service provider send all user  names back. doc(accounts.xml)//user[name='*'] The attacks that are possible  through XQuery are difficult to predict, if the data is not validated prior  to executing the XQL.
529 
530 
531 
532 656::Reliance on hidden form fields in a web  application. Many web application vulnerabilities exist because the  developer did not consider that 'hidden' form fields can be processed using  a modified client.::Hard-coded cryptographic key stored in executable  program.::Hard-coded cryptographic key stored in executable  program.::Hard-coded hashed values for username and password  contained in client-side script, allowing brute-force offline  attacks.
533 
534 
535 
536 663::unsafe calls to library functions from signal  handler::handler for SIGCHLD uses non-reentrant  functions
537 
538 665::chain: an invalid value prevents a library file  from being included, skipping initialization of key variables, leading to  resultant eval injection.::Improper error checking in protection mechanism  produces an uninitialized variable, allowing security bypass and code  execution.::Use of uninitialized memory may allow code  execution.::Free of an uninitialized pointer leads to crash  and possible code execution.::OS kernel does not reset a port when starting a  setuid program, allowing local users to access the port and gain  privileges.::Product does not clear memory contents when  generating an error message, leading to information  leak.::Lack of initialization triggers NULL pointer  dereference or double-free.::Uninitialized variable leads to code execution in  popular desktop application.::chain: Uninitialized variable leads to infinite  loop.::chain: Improper initialization leads to memory  corruption.::Composite: race condition allows attacker to  modify an object while it is still being initialized, causing software to  access uninitialized memory.::Permission bitmap is not properly initialized,  leading to resultant privilege elevation or  DoS.::chain: game server can access player data  structures before initialization has happened leading to NULL  dereference::chain: uninitialized function pointers can be  dereferenced allowing code execution::chain: improper initialization of memory can lead  to NULL dereference::chain: some unprivileged ioctls do not verify that  a structure has been initialized before invocation, leading to NULL  dereference
539 
540 
541 
542 
543 
544 
545 
546 672::chain: race condition might allow resource to be  released before operating on it, leading to NULL dereference 
547 
548 674::Deeply nested arrays trigger stack  exhaustion.::Self-referencing pointers create infinite loop and  resultant stack exhaustion.
549 
550 676::Library has multiple buffer overflows using  sprintf() and strcpy()::Buffer overflow using  strcat()::Buffer overflow using  strcpy()::Buffer overflow using  strcpy()::Vulnerable use of strcpy() changed to use safer  strlcpy()::Buffer overflow using  strcpy()
551 681::Chain: integer signedness passes signed  comparison, leads to heap overflow::Chain: signed short width value in image processor  is sign extended during conversion to unsigned int, which leads to integer  overflow and heap-based buffer overflow.:: Integer truncation of length value leads to  heap-based buffer overflow.::Size of a particular type changes for 64-bit  platforms, leading to an integer truncation in document processor causes  incorrect index to be generated.
552 
553 683::Application calls functions with arguments in the  wrong order, allowing attacker to bypass intended access  restrictions.
554 
555 
556 
557 
558 688::Kernel code specifies the wrong variable in first  argument, leading to resultant NULL pointer  dereference.
559 
560 
561 
562 
563 
564 
565 
566 
567 
568 
569 
570 
571 
572 
573 708::File system sets wrong ownership and group when  creating a new file.::OS installs program with bin owner/group, allowing  modification.::Manager does not properly restore ownership of a  reusable resource when a user logs out, allowing privilege  escalation.::Backup software restores symbolic links with  incorrect uid/gid.::Product changes the ownership of files that a  symlink points to, instead of the symlink  itself.
574 71::More security problems in Apache on Mac OS  X::The Finder in Mac OS X and earlier allows local  users to overwrite arbitrary files and gain privileges by creating a hard  link from the .DS_Store file to an arbitrary  file.
575 
576 
577 73::Chain: external control of values for user's  desired language and theme enables path  traversal.::Chain: external control of user's target language  enables remote file inclusion.
578 732::Anti-virus product sets insecure 'Everyone: Full  Control' permissions for files under the 'Program Files' folder, allowing  attackers to replace executables with Trojan  horses.::Product creates directories with 0777 permissions  at installation, allowing users to gain privileges and access a socket used  for authentication.::Photo editor installs a service with an insecure  security descriptor, allowing users to stop or start the service, or execute  commands as SYSTEM.::Library function copies a file to a new target and  uses the source file's permissions for the target, which is incorrect when  the source file is a symbolic link, which typically has 0777 permissions. ::Device driver uses world-writable permissions for  a socket file, allowing attackers to inject arbitrary  commands.::LDAP server stores a cleartext password in a  world-readable file.::Terminal emulator creates TTY devices with  world-writable permissions, allowing an attacker to write to the terminals  of other users.::VPN product stores user credentials in a registry  key with 'Everyone: Full Control' permissions, allowing attackers to steal  the credentials.::Driver installs its device interface with  'Everyone: Write' permissions.::Driver installs a file with world-writable  permissions.::Product changes permissions to 0777 before  deleting a backup; the permissions stay insecure for subsequent  backups.::Product creates a share with 'Everyone: Full  Control' permissions, allowing arbitrary program  execution.::Product uses 'Everyone: Full Control' permissions  for memory-mapped files (shared memory) in inter-process communication,  allowing attackers to tamper with a session.::Database product uses read/write permissions for  everyone for its shared memory, allowing theft of credentials. ::Security product uses 'Everyone: Full Control'  permissions for its configuration files.::'Everyone: Full Control' permissions assigned to a  mutex allows users to disable network  connectivity.::Chain: database product contains buffer overflow  that is only reachable through a .ini configuration file - which has  'Everyone: Full Control' permissions.
579 733::C compiler optimization, as allowed by  specifications, removes code that is used to perform checks to detect  integer overflows.
580 
581 749::arbitrary Java code execution via exposed  method::security tool ActiveX control allows download or  upload of files
582 
583 754::Unchecked return value leads to resultant integer  overflow and code execution.::Program does not check return value when invoking  functions to drop privileges, which could leave users with higher privileges  than expected by forcing those functions to  fail.::Program does not check return value when invoking  functions to drop privileges, which could leave users with higher privileges  than expected by forcing those functions to  fail.
584 755::Chain: OS kernel does not properly handle a  failure of a function call (CWE-755), leading to an unlock of a resource  that was not locked (CWE-832), with resultant  crash.
585 
586 757::Attacker can select an older version of the  software to exploit its vulnerabilities.::Improper prioritization of encryption ciphers  during negotiation leads to use of a weaker  cipher.::chain: SSL/TLS implementation disables a  verification step (CWE-325) that enables a downgrade attack to a weaker  protocol.::Telnet protocol implementation allows downgrade to  weaker authentication and encryption using a man-in-the-middle  attack.::SSH server implementation allows override of  configuration setting to use weaker authentication schemes. This may be a  composite with CWE-642.
587 758::Change in C compiler behavior causes resultant  buffer overflows in programs that depend on behaviors that were undefined in  the C standard.
588 759::Router does not use a salt with a hash, making it  easier to crack passwords.::Router does not use a salt with a hash, making it  easier to crack passwords.
589 
590 760::Blogging software uses a hard-coded salt when  calculating a password hash.::Database server uses the username for a salt when  encrypting passwords, simplifying brute force  attacks.::Server uses a constant salt when encrypting  passwords, simplifying brute force attacks.::chain: product generates predictable MD5 hashes  using a constant value combined with username, allowing authentication  bypass.
591 
592 
593 
594 
595 765::Attacker provides invalid address to a  memory-reading function, causing a mutex to be unlocked  twice
596 766::variables declared public allows remote read of  system properties such as user name and home  directory.
597 
598 
599 
600 770::Language interpreter does not restrict the number  of temporary files being created when handling a MIME request with a large  number of parts..::Driver does not use a maximum width when invoking  sscanf style functions, causing stack  consumption.::Large integer value for a length property in an  object causes a large amount of memory  allocation.::Product allows exhaustion of file descriptors when  processing a large number of TCP packets.::Communication product allows memory consumption  with a large number of SIP requests, which cause many sessions to be  created.::Product allows attackers to cause a denial of  service via a large number of directives, each of which opens a separate  window.::CMS does not restrict the number of searches that  can occur simultaneously, leading to resource  exhaustion.
601 
602 772:: Chain: anti-virus product encounters a malformed  file but returns from a function without closing a file descriptor (CWE-775)  leading to file descriptor consumption (CWE-400) and failed scans. ::Sockets not properly closed when attacker  repeatedly connects and disconnects from  server.::Does not shut down named pipe connections if  malformed data is sent.:: Chain: memory leak (CWE-404) leads to resource  exhaustion.:: Product allows exhaustion of file descriptors  when processing a large number of TCP  packets.::Port scan triggers CPU consumption with processes  that attempt to read data from closed  sockets.::Product allows resource exhaustion via a large  number of calls that do not complete a 3-way  handshake.:: Return values of file/socket operations not  checked, allowing resultant consumption of file  descriptors.
603 
604 
605 775::Chain: anti-virus product encounters a malformed  file but returns from a function without closing a file descriptor (CWE-775)  leading to file descriptor consumption (CWE-400) and failed scans. 
606 776::XML bomb in web server  module::Parsing library allows XML  bomb
607 
608 778::server does not log failed authentication  attempts, making it easier for attackers to perform brute force password  guessing without being detected::admin interface does not log failed authentication  attempts, making it easier for attackers to perform brute force password  guessing without being detected::default configuration for POP server does not log  source IP or username for login attempts::proxy does not log requests without 'http://' in  the URL, allowing web surfers to access restricted web content without  detection::web server does not log requests for a  non-standard request type
609 779::server records a large amount of data to the  server log when it receives malformed headers::chain: application does not restrict access to  front-end for updates, which allows attacker to fill the error  log
610 78::Canonical example. CGI program does not neutralize  '|' metacharacter when invoking a phonebook  program.::Language interpreter's mail function accepts  another argument that is concatenated to a string used in a dangerous  popen() call. Since there is no neutralization of this argument, both OS  Command Injection (CWE-78) and Argument Injection (CWE-88) are  possible.::Web server allows command execution using '|'  (pipe) character.::FTP client does not filter '|' from filenames  returned by the server, allowing for OS command  injection.::Shell metacharacters in a filename in a ZIP  archive::Shell metacharacters in a telnet:// link are not  properly handled when the launching application processes the  link.::OS command injection through environment  variable.::OS command injection through https://  URLs::Chain: incomplete blacklist for OS command  injection
611 
612 781::Driver for file-sharing and messaging protocol  allows attackers to execute arbitrary code.::Anti-virus product does not validate addresses,  allowing attackers to gain SYSTEM privileges.::DVD software allows attackers to cause a  crash.::Personal firewall allows attackers to gain SYSTEM  privileges.::chain: device driver for packet-capturing software  allows access to an unintended IOCTL with resultant array index  error.
613 782::Operating system does not enforce permissions on  an IOCTL that can be used to modify network  settings.::Device driver does not restrict ioctl calls to its  master.::ioctl does not check for a required capability  before processing certain requests.::Chain: insecure device permissions allows access  to an IOCTL, allowing arbitrary memory to be  overwritten.::Chain: anti-virus product uses weak permissions  for a device, leading to resultant buffer overflow in an exposed  IOCTL.::Chain: sandbox allows opening of a TTY device,  enabling shell commands through an exposed  ioctl.::Anti-virus product uses insecure security  descriptor for a device driver, allowing access to a privileged IOCTL. ::Unauthorized user can disable keyboard or mouse by  directly invoking a privileged IOCTL.
614 783::Authentication module allows authentication bypass  because it uses '(x = call(args) == SUCCESS)' instead of '((x = call(args))  == SUCCESS)'.::Chain: Language interpreter calculates wrong  buffer size (CWE-131) by using 'size = ptr ? X : Y' instead of 'size = (ptr  ? X : Y)' expression.::Chain: product does not properly check the result  of a reverse DNS lookup because of operator precedence (CWE-783), allowing  bypass of DNS-based access restrictions.
615 784::Attacker can bypass authentication by setting a  cookie to a specific value.::Attacker can bypass authentication and gain admin  privileges by setting an 'admin' cookie to 1.::Content management system allows admin privileges  by setting a 'login' cookie to 'OK.'::e-dating application allows admin privileges by  setting the admin cookie to 1. ::Web-based email list manager allows attackers to  gain admin privileges by setting a login cookie to 'admin.' 
616 
617 
618 
619 
620 789::memory consumption and daemon exit by specifying a  large value in a length field::large value in a length field leads to memory  consumption and crash when no more memory is  available::large key size in game program triggers crash when  a resizing function cannot allocate enough  memory::large Content-Length HTTP header value triggers  application crash in instant messaging application due to failure in memory  allocation
621 79::Chain: protection mechanism failure allows  XSS::Chain: only checks 'javascript:'  tag::Chain: only removes SCRIPT tags, enabling  XSS::Reflected XSS using the PATH_INFO in a  URL::Reflected XSS not properly handled when generating  an error message::Reflected XSS sent through email  message.::Stored XSS in a security  product.::Stored XSS using a wiki  page.::Stored XSS in a guestbook  application.::Stored XSS in a guestbook application using a  javascript: URI in a bbcode img tag.::Chain: library file is not protected against a  direct request (CWE-425), leading to reflected  XSS.
622 
623 
624 
625 
626 
627 
628 
629 
630 798::SCADA system uses a hard-coded password to protect  back-end database containing authorization information, exploited by Stuxnet  worm::FTP server library uses hard-coded usernames and  passwords for three default accounts::Chain: Router firmware uses hard-coded username  and password for access to debug functionality, which can be used to execute  arbitrary code::Server uses hard-coded authentication  key::Backup product uses hard-coded username and  password, allowing attackers to bypass authentication via the RPC  interface::Security appliance uses hard-coded password  allowing attackers to gain root access::Drive encryption product stores hard-coded  cryptographic keys for encrypted configuration files in executable  programs::VoIP product uses unchangeable hard-coded public  credentials that cannot be changed, which allows attackers to obtain  sensitive information::VoIP product uses hard coded public and private  SNMP community strings that cannot be changed, which allows remote attackers  to obtain sensitive information ::Backup product contains hard-coded credentials  that effectively serve as a back door, which allows remote attackers to  access the file system
631 799::Mail server allows attackers to prevent other  users from accessing mail by sending large number of rapid  requests.
632 
633 80::XSS in parameter in a  link.::XSS in web-based email product via attachment  filenames.::HTML injection in posted  message.::XSS not quoted in error  page.
634 
635 805::Chain: large length value causes buffer over-read  (CWE-126)::Use of packet length field to make a calculation,  then copy into a fixed-size buffer::Chain: retrieval of length value from an  uninitialized memory location::Crafted length value in document reader leads to  buffer overflow::SSL server overflow when the sum of multiple  length fields exceeds a given value::Language interpreter API function doesn't validate  length argument, leading to information  exposure
636 
637 807::Attacker can bypass authentication by setting a  cookie to a specific value.::Attacker can bypass authentication and gain admin  privileges by setting an 'admin' cookie to 1.::Content management system allows admin privileges  by setting a 'login' cookie to 'OK.'::e-dating application allows admin privileges by  setting the admin cookie to 1. ::Web-based email list manager allows attackers to  gain admin privileges by setting a login cookie to 'admin.' 
638 81::XSS in default error page from Host:  header.::XSS in error  message.::XSS in error page from targeted  parameter.
639 82::Stored XSS in a guestbook application using a  javascript: URI in a bbcode img tag.::javascript URI scheme in IMG  tag.::javascript URI scheme in IMG  tag.::javascript URI scheme in IMG  tag.::javascript URI scheme in IMG  tag.::javascript URI scheme in IMG  tag.::javascript URI scheme in IMG  tag.::javascript URI scheme in IMG  tag.
640 
641 
642 822::message-passing framework interprets values in  packets as pointers, causing a crash.::labeled as a 'type confusion' issue, also referred  to as a 'stale pointer.' However, the bug ID says 'contents are simply  interpreted as a pointer... renderer ordinarily doesn't supply this pointer  directly'. The 'handle' in the untrusted area is replaced in one function,  but not another - thus also, effectively, exposure to wrong sphere  (CWE-668). ::Untrusted dereference using undocumented  constructor.::An error code is incorrectly checked and  interpreted as a pointer, leading to a crash.::An untrusted value is obtained from a packet and  directly called as a function pointer, leading to code  execution.::Undocumented attribute in multimedia software  allows 'unmarshaling' of an untrusted pointer. ::ActiveX control for security software accepts a  parameter that is assumed to be an initialized  pointer.::Spreadsheet software treats certain record values  that lead to 'user-controlled pointer' (might be untrusted offset, not  untrusted pointer).
643 823::Invalid offset in undocumented opcode leads to  memory corruption.::Multimedia player uses untrusted value from a file  when using file-pointer calculations.::Spreadsheet program processes a record with an  invalid size field, which is later used as an  offset.::Instant messaging library does not validate an  offset value specified in a packet.::Language interpreter does not properly handle  invalid offsets in JPEG image, leading to out-of-bounds memory access and  crash.::negative offset leads to out-of-bounds read ::untrusted offset in kernel ::'blind trust' of an offset value while writing  heap memory allows corruption of function pointer,leading to code execution ::negative value (signed) causes pointer  miscalculation ::signed values cause incorrect pointer calculation ::values used as pointer  offsets::a return value from a function is sign-extended if  the value is signed, then used as an offset for pointer  arithmetic::portions of a GIF image used as offsets, causing  corruption of an object pointer.::invalid numeric field leads to a free of arbitrary  memory locations, then code execution.::large number of elements leads to a free of an  arbitrary address::array index issue (CWE-129) with negative offset,  used to dereference a function pointer::'buffer seek' value - basically an  offset?
644 824::chain: unchecked return value (CWE-252) leads to  free of invalid, uninitialized pointer (CWE-824). ::Pointer in structure is not initialized, leading  to NULL pointer dereference (CWE-476) and system  crash.::Free of an uninitialized  pointer.::Improper handling of invalid signatures leads to  free of invalid pointer.::Invalid encoding triggers free of uninitialized  pointer.::Crafted PNG image leads to free of uninitialized  pointer.::Crafted GIF image leads to free of uninitialized  pointer.::Access of uninitialized pointer might lead to code  execution.::Step-based manipulation: invocation of debugging  function before the primary initialization function leads to access of an  uninitialized pointer and code execution.::Unchecked return values can lead to a write to an  uninitialized pointer.::zero-length input leads to free of uninitialized  pointer.::Crafted font leads to uninitialized function  pointer.::Uninitialized function pointer in freed memory is  invoked ::LDAP server mishandles malformed BER queries,  leading to free of uninitialized memory::Firewall can crash with certain ICMP packets that  trigger access of an uninitialized pointer. ::LDAP server does not initialize members of  structs, which leads to free of uninitialized pointer if an LDAP request  fails.
645 825::access of expired memory address leads to  arbitrary code execution::stale pointer issue leads to denial of service and  possibly other consequences::read of value at an offset into a structure after  the offset is no longer valid 
646 826::chain: race condition might allow resource to be  released before operating on it, leading to NULL dereference 
647 827::Product does not properly reject DTDs in SOAP  messages, which allows remote attackers to read arbitrary files, send HTTP  requests to intranet servers, or cause a denial of service. 
648 828::Signal handler uses functions that ultimately call  the unsafe syslog/malloc/s*printf, leading to denial of service via multiple  login attempts::Chain: Signal handler contains too much  functionality (CWE-828), introducing a race condition that leads to a double  free (CWE-415).::unsafe calls to library functions from signal  handler::SIGURG can be used to remotely interrupt signal  handler; other variants exist.::handler for SIGCHLD uses non-reentrant  functions::SIGCHLD not blocked in a daemon loop while counter  is modified, causing counter to get out of  sync.
649 829::Product does not properly reject DTDs in SOAP  messages, which allows remote attackers to read arbitrary files, send HTTP  requests to intranet servers, or cause a denial of service. ::Modification of assumed-immutable configuration  variable in include file allows file inclusion via direct  request.::Modification of assumed-immutable configuration  variable in include file allows file inclusion via direct  request.::Modification of assumed-immutable configuration  variable in include file allows file inclusion via direct  request.::Modification of assumed-immutable configuration  variable in include file allows file inclusion via direct  request.::Modification of assumed-immutable configuration  variable in include file allows file inclusion via direct  request.::Modification of assumed-immutable configuration  variable in include file allows file inclusion via direct  request.::Modification of assumed-immutable variable in  configuration script leads to file inclusion.::PHP file inclusion.::PHP file inclusion.::PHP file inclusion.::PHP local file  inclusion.::PHP remote file  include.::PHP remote file  include.::PHP remote file  include.::PHP remote file  include.::PHP remote file  include.::Directory traversal vulnerability in PHP include  statement.::Directory traversal vulnerability in PHP include  statement.::PHP file inclusion issue, both remote and local;  local include uses '..' and '%00' characters as a manipulation, but many  remote file inclusion issues probably have this  vector.
650 83::Bypass filtering of SCRIPT tags using onload in  BODY, href in A, BUTTON, INPUT, and others.::guestbook XSS in STYLE or IMG SRC  attributes.::Javascript in onerror attribute of IMG  tag.::XSS in web-based email product via onmouseover  event.::XSS via script in <P>  tag.::Onload, onmouseover, and other events in an e-mail  attachment.::Onmouseover and onload events in img, link, and  mail tags.::Javascript in onmouseover attribute in e-mail  address or URL.
651 
652 
653 832::function in OS kernel unlocks a mutex that was not  previously locked, causing a panic or overwrite of arbitrary  memory.::Chain: OS kernel does not properly handle a  failure of a function call (CWE-755), leading to an unlock of a resource  that was not locked (CWE-832), with resultant  crash.::OS kernel performs an unlock in some incorrect  circumstances, leading to panic.
654 833::OS deadlock::OS deadlock involving 3 separate  functions::deadlock in library::deadlock triggered by packets that force  collisions in a routing table::read/write deadlock between web server and  script::web server deadlock involving multiple listening  connections ::multiple simultaneous calls to the same function  trigger deadlock.::chain: other weakness leads to NULL pointer  dereference (CWE-476) or deadlock (CWE-833).::deadlock when an operation is performed on a  resource while it is being removed.::Deadlock in device driver triggered by using file  handle of a related device.::Deadlock when large number of small messages  cannot be processed quickly enough.::OS kernel has deadlock triggered by a signal  during a core dump.::Race condition leads to  deadlock.::Chain: array index error (CWE-129) leads to  deadlock (CWE-833)
655 
656 835::Chain: off-by-one error leads to infinite loop  using invalid hex-encoded characters.::Chain: self-referential values in recursive  definitions lead to infinite loop.::NULL UDP packet is never cleared from a queue,  leading to infinite loop.::Floating point conversion routine cycles back and  forth between two different values.::Floating point conversion routine cycles back and  forth between two different values.::Chain: improperly clearing a pointer in a linked  list leads to infinite loop.
657 836::Product performs authentication with user-supplied  password hashes that can be obtained from a separate SQL injection  vulnerability (CVE-2009-1282).
658 837::Ticket-booking web application allows a user to  lock a seat more than once.::CMS allows people to rate downloads by voting more  than once.::Polling software allows people to vote more than  once by setting a cookie.::Chain: lack of validation of a challenge key in a  game allows a player to register multiple times and lock other players out  of the game.::Library feature allows attackers to check out the  same e-book multiple times, preventing other users from accessing copies of  the e-book.
659 838::Server does not properly handle requests that do  not contain UTF-8 data; browser assumes UTF-8, allowing  XSS.
660 839::Chain: integer overflow causes a negative signed  value, which later bypasses a maximum-only check, leading to heap-based  buffer overflow. ::Chain: 16-bit counter can be interpreted as a  negative value, compared to a 32-bit maximum value, leading to buffer  under-write.::Chain: kernel's lack of a check for a negative  value leads to memory corruption.::Chain: parser uses atoi() but does not check for a  negative value, which can happen on some platforms, leading to buffer  under-write. ::Chain: Negative value stored in an int bypasses a  size check and causes allocation of large amounts of memory. ::Chain: negative offset value to IOCTL bypasses  check for maximum index, then used as an array index for buffer under-read. ::chain: file transfer client performs signed  comparison, leading to integer overflow and heap-based buffer  overflow.::chain: negative ID in media player bypasses check  for maximum index, then used as an array index for buffer  under-read.
661 84::Cross-site scripting (XSS) vulnerability in  Microsoft Outlook Web Access (OWA) component in Exchange Server 5.5 allows  remote attackers to inject arbitrary web script or HTML via an email message  with an encoded javascript: URL ('jav&#X41sc&#0010;ript:') in an IMG  tag.::Cross-site scripting (XSS) vulnerability in Novell  Groupwise WebAccess 6.5 before July 11, 2005 allows remote attackers to  inject arbitrary web script or HTML via an e-mail message with an encoded  javascript URI (e.g. 'j&#X41vascript' in an IMG  tag).::Encoded script within BBcode IMG  tag.::Encoded 'javascript' in IMG  tag.::Encoded 'javascript' in IMG  tag.
662 841::Bypass of access/billing restrictions by sending  traffic to an unrestricted destination before sending to a restricted  destination.::Attacker can access portions of a restricted page  by canceling out of a dialog.::FTP server allows attackers to LIST directories as  root before performing the USER/PASS login  steps.::Ticket-tracking system does not enforce a  permission setting.::Shopping cart does not close a database connection  when user restores a previous order, leading to connection  exhaustion.::Chain: product does not properly handle dropped  connections, leading to missing NULL terminator (CWE-170) and segmentation  fault.::Chain: Authentication bypass by skipping the first  startup step as required by the protocol.::Chain: File server crashes when sent a 'find next'  request without an initial 'find first.'
663 842::Operating system assigns user to privileged wheel  group, allowing the user to gain root  privileges.::Chain: drafted web request allows the creation of  users with arbitrary group membership.::Chain: improper processing of configuration  options causes users to contain unintended group  memberships.::CMS does not prevent remote administrators from  promoting other users to the administrator group, in violation of the  intended security model.::Product assigns members to the root group,  allowing escalation of privileges.::Chain: daemon does not properly clear groups  before dropping privileges.
664 843::Type confusion in CSS sequence leads to  out-of-bounds read.::Size inconsistency allows code execution, first  discovered when it was actively exploited  in-the-wild.::Improperly-parsed file containing records of  different types leads to code execution when a memory location is  interpreted as a different object than  intended.
665 85::XSS using  '<script'.::Encoded 'javascript' in IMG  tag.::Extra '<' in front of SCRIPT  tag.
666 86::XSS filter doesn't filter null characters before  looking for dangerous tags, which are ignored by web browsers. Multiple  Interpretation Error (MIE) and  validate-before-cleanse.
667 862::Web application does not restrict access to admin  scripts, allowing authenticated users to reset administrative  passwords.::Web application does not restrict access to admin  scripts, allowing authenticated users to modify passwords of other  users.::Web application stores database file under the web  root with insufficient access control (CWE-219), allowing direct  request.::Terminal server does not check authorization for  guest access.::System monitoring software allows users to bypass  authorization by creating custom forms.::Content management system does not check access  permissions for private files, allowing others to view those  files.::Product does not check the ACL of a page accessed  using an 'include' directive, allowing attackers to read unauthorized  files.::Default ACL list for a DNS server does not set  certain ACLs, allowing unauthorized DNS  queries.
668 863::Gateway uses default 'Allow' configuration for its  authorization settings.::Chain: product does not properly interpret a  configuration option for a system group, allowing users to gain  privileges.::Chain: SNMP product does not properly parse a  configuration option for which hosts are allowed to connect, allowing  unauthorized IP addresses to connect.::Chain: reliance on client-side security (CWE-602)  allows attackers to bypass authorization using a custom  client.::Chain: product does not properly handle wildcards  in an authorization policy list, allowing unintended  access.::ACL-based protection mechanism treats negative  access rights as if they are positive, allowing bypass of intended  restrictions.::Product relies on the X-Forwarded-For HTTP header  for authorization, allowing unintended access by spoofing the  header.::Chain: file-system code performs an incorrect  comparison (CWE-697), preventing default ACLs from being properly  applied.::Chain: product does not properly check the result  of a reverse DNS lookup because of operator precedence (CWE-783), allowing  bypass of DNS-based access restrictions.
669 87::XSS using  '&={script}'.
670 88::Canonical Example::Web browser doesn't filter '-' when invoking  various commands, allowing command-line switches to be specified. ::Web browser doesn't filter '-' when invoking  various commands, allowing command-line switches to be specified. ::Argument injection vulnerability in TellMe 1.2 and  earlier allows remote attackers to modify command line arguments for the  Whois program and obtain sensitive information via '--' style options in the  q_Host parameter.::Beagle before 0.2.5 can produce certain insecure  command lines to launch external helper applications while indexing, which  allows attackers to execute arbitrary commands. NOTE: it is not immediately  clear whether this issue involves argument injection, shell metacharacters,  or other issues.::Argument injection vulnerability in Internet  Explorer 6 for Windows XP SP2 allows user-assisted remote attackers to  modify command line arguments to an invoked mail client via ' (double quote)  characters in a mailto: scheme handler, as demonstrated by launching  Microsoft Outlook with an arbitrary filename as an attachment. NOTE: it is  not clear whether this issue is implementation-specific or a problem in the  Microsoft API.::Argument injection vulnerability in Mozilla  Firefox 1.0.6 allows user-assisted remote attackers to modify command line  arguments to an invoked mail client via ' (double quote) characters in a  mailto: scheme handler, as demonstrated by launching Microsoft Outlook with  an arbitrary filename as an attachment. NOTE: it is not clear whether this  issue is implementation-specific or a problem in the Microsoft  API.::Argument injection vulnerability in Avant Browser  10.1 Build 17 allows user-assisted remote attackers to modify command line  arguments to an invoked mail client via ' (double quote) characters in a  mailto: scheme handler, as demonstrated by launching Microsoft Outlook with  an arbitrary filename as an attachment. NOTE: it is not clear whether this  issue is implementation-specific or a problem in the Microsoft  API.::Argument injection vulnerability in the URI  handler in Skype 2.0.*.104 and 2.5.*.0 through 2.5.*.78 for Windows allows  remote authorized attackers to download arbitrary files via a URL that  contains certain command-line switches.::Argument injection vulnerability in WinSCP 3.8.1  build 328 allows remote attackers to upload or download arbitrary files via  encoded spaces and double-quote characters in a scp or sftp  URI.::Argument injection vulnerability in the Windows  Object Packager (packager.exe) in Microsoft Windows XP SP1 and SP2 and  Server 2003 SP1 and earlier allows remote user-assisted attackers to execute  arbitrary commands via a crafted file with a '/' (slash) character in the  filename of the Command Line property, followed by a valid file extension,  which causes the command before the slash to be executed, aka 'Object  Packager Dialogue Spoofing Vulnerability.'::Argument injection vulnerability in HyperAccess  8.4 allows user-assisted remote attackers to execute arbitrary vbscript and  commands via the /r option in a telnet:// URI, which is configured to use  hawin32.exe.::Argument injection vulnerability in the telnet  daemon (in.telnetd) in Solaris 10 and 11 (SunOS 5.10 and 5.11) misinterprets  certain client '-f' sequences as valid requests for the login program to  skip authentication, which allows remote attackers to log into certain  accounts, as demonstrated by the bin account.::Language interpreter's mail function accepts  another argument that is concatenated to a string used in a dangerous  popen() call. Since there is no neutralization of this argument, both OS  Command Injection (CWE-78) and Argument Injection (CWE-88) are  possible.
671 89::chain: SQL injection in library intended for  database authentication allows SQL injection and authentication bypass. ::SQL injection through an ID that was supposed to  be numeric.::SQL injection through an ID that was supposed to  be numeric.::SQL injection via user  name.::SQL injection via user name or password  fields.::SQL injection in security product, using a crafted  group name.::SQL injection in authentication  library.
672 
673 
674 
675 93::CRLF injection enables spam proxy (add mail  headers) using email address or name.::CRLF injection in API function arguments modify  headers for outgoing requests.::Spoofed entries in web server log file via  carriage returns::Chain: inject fake log entries with fake  timestamps using CRLF injection::Chain: Application accepts CRLF in an object ID,  allowing HTTP response splitting.::Chain: HTTP response splitting via CRLF in  parameter related to URL.
676 
677 95::Eval injection in PHP  program.::Eval injection in Perl  program.::Eval injection in Perl program using an ID that  should only contain hyphens and numbers.::Direct code injection into Perl eval  function.::Eval injection in Perl  program.::Direct code injection into Perl eval  function.::Direct code injection into Perl eval  function.::MFV. code injection into PHP eval statement using  nested constructs that should not be nested.::MFV. code injection into PHP eval statement using  nested constructs that should not be nested.::Code injection into Python eval statement from a  field in a formatted file.::Eval injection in Python  program.::chain: Resultant eval injection. An invalid value  prevents initialization of variables, which can be modified by attacker and  later injected into PHP eval statement.
678 96::Perl code directly injected into CGI library file  from parameters to another CGI program.::Direct PHP code injection into supporting template  file.::Direct code injection into PHP script that can be  accessed by attacker.::PHP code from User-Agent HTTP header directly  inserted into log file implemented as PHP  script.
679 
680 98::Modification of assumed-immutable configuration  variable in include file allows file inclusion via direct  request.::Modification of assumed-immutable configuration  variable in include file allows file inclusion via direct  request.::Modification of assumed-immutable configuration  variable in include file allows file inclusion via direct  request.::Modification of assumed-immutable configuration  variable in include file allows file inclusion via direct  request.::Modification of assumed-immutable configuration  variable in include file allows file inclusion via direct  request.::Modification of assumed-immutable configuration  variable in include file allows file inclusion via direct  request.::Modification of assumed-immutable variable in  configuration script leads to file inclusion.::PHP file inclusion.::PHP file inclusion.::PHP file inclusion.::PHP local file  inclusion.::PHP remote file  include.::PHP remote file  include.::PHP remote file  include.::PHP remote file  include.::PHP remote file  include.::Directory traversal vulnerability in PHP include  statement.::Directory traversal vulnerability in PHP include  statement.::PHP file inclusion issue, both remote and local;  local include uses '..' and '%00' characters as a manipulation, but many  remote file inclusion issues probably have this  vector.
681 
